{
  
    
        "post0": {
            "title": "Lauriesantos",
            "content": "Laurie Santos Notes . . Title: Laurie Santos | toc: true | layout: post | Badges: true | comments: True | author: Jake Warren | Categories: [Coding] . | . “Psychology and the Good Life” Analysis . Main Idea . Laurie Santos was giving a TedTalk about how to teachers can make srudents happier. She talked about how our brains work and how students can be the most efficiant. She also teaches students how they should use this information to etter their lives. | . Main Points . Materialistic items and short term events are only a small stimulate of happiness. Real happiness comes from success. When people do things that will benefit their worth and value that is when they are happiest. | Being social is important for happiness. As humans we are social creatures so we must communicste with others all the time to stay happy. | You have to practice the knowlege she is giiving you. Knowing how to better your life is one thing but you have to actually act to make change. | Be grateful for everythign you have. If you appreciate what you have and don’t only think about what you can have you will be happier. This is because you will be happy with your life. You won’t want more and if you are completley happy with your life there is no reason to be depressed. | You are not stuck at one state of wellness. You are able to change your state of mind. Pur own doing and improving our lives is half of our well-being while the other half we are born with | Your brain lies to you o what you want. It may tell you you want to have a materialistic item but really you want to better your life. Drugs a short term stimulate that make your life worse in the long run. | Gratitude note . My Friend . I am grateful for you Ethan. You are always by my side and ever since I figured out we were neighbors I have had a great time. We have been best friends for a while now. | . Response . Thank you Jake. I appreciate you too. You have always been there for me too. i am very happy we have had this friendship. | . Gratitude list . Food | Family | Friends | Education | Football | . Goals . Improve myself mentally and physically | Go to college | Eat healthy | Drink lots of water | Socialize as much as I can | Remain calm | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/09/19/LaurieSantos.html",
            "relUrl": "/2022/09/19/LaurieSantos.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Collegeboardnotes",
            "content": "College Board Notes . . Title: College Board Notes | toc: true | layout: post | Badges: true | comments: True | author: Jake Warren | Categories: [Coding] . | . 1.1 Videos . Video 1 . Computing innovations are improved through collaberation | Computing innovtion includes a program as an integral part of its function | Computing innovation can be physical or nonphysical | Diverse perspectives eliminates bias in development | . Video 2 . Pair programming is when two programmers work together. The diver writes the code and the pointers makes sure every line of code is correct. | Think-pair-share is a process where a student thinks through a process alone. Then they find a parter and share their ideas with them then the class. | Comments in code help partners | Github is a great way to work together | . Quiz Results . . Hacks . Me and my partner did not know each other before oming to this class | Both of us are white | He likes skateboarding and I like football as our main hobbies | We do have a lot of similariities though | We are both new to coding but have differnt skills. He understandssome code better and I understand other code better. | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/09/19/CollegeBoardNotes.html",
            "relUrl": "/2022/09/19/CollegeBoardNotes.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "App Lab Idea",
            "content": "App Lab Idea . My idea for a new app would be a game. In this game the player would customize a car. It would ask a series of questions. First it would ask; What type of car do you want? It would give an option of a truck, SUV, small car, and and convertable. Next it would ask what color do you want it. Eventually when all of the question are done being asked, based on what the player input, a picture of a car would be shown. It would have all of the customizations the player input. | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/09/09/AppIdea.html",
            "relUrl": "/2022/09/09/AppIdea.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "App Lab Notes",
            "content": "Notes . Out test is on Clash Royale | We used on event for most codes | Score is rewarded for getting a question right and taken away for getting it wrong | . Link . https://studio.code.org/projects/applab/XrKdcpPzPk4O3m7JoM-nBXh3WYKJlcGoCP75AYGR_Qg .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/coding/2022/09/08/AppLab.html",
            "relUrl": "/coding/2022/09/08/AppLab.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Vocab Notebook",
            "content": "Lists: | Dictionaries: | Iteration: | String: | Print: | Index: | Integer | Float | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/08/30/vocab.html",
            "relUrl": "/2022/08/30/vocab.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "For Loop",
            "content": "InfoDb = [] InfoDb.append({ &quot;FirstName&quot;: &quot;Jake&quot;, &quot;LastName&quot;: &quot;Warren&quot;, &quot;DOB&quot;: &quot;September 8&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;FavoriteFood&quot;: &quot;Burger&quot;, &quot;Email&quot;: &quot;jacobw22751@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2016-Toyota Tacoma&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Finn&quot;, &quot;LastName&quot;: &quot;Carpenter&quot;, &quot;DOB&quot;: &quot;December 12&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;FavoriteFood&quot;: &quot;Pizza&quot;, &quot;Email&quot;: &quot;finnc51448@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2012 Nissan Xterra&quot;] }) InfoDb.append({ &quot;FirstName&quot;: input(&quot;Name:&quot;), &quot;LastName&quot;: input(&quot;LastName:&quot;), &quot;DOB&quot;: input(&quot;Birthday:&quot;), &quot;Residence&quot;: input(&quot;Residence:&quot;), &quot;FavoriteFood&quot;: input(&quot;FavoriteFood:&quot;), &quot;Email&quot;: input(&quot;Email:&quot;), &quot;Owns_Cars&quot;: input(&quot;Owns_Cars:&quot;) }) . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) print(&quot; t&quot;, &quot;FavoriteFood:&quot;, d_rec[&quot;FavoriteFood&quot;]) print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars:&quot;, d_rec[&quot;Owns_Cars&quot;]) print() def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Jake Warren Residence: San Diego FavoriteFood: Burger Birth Day: September 8 Cars: [&#39;2016-Toyota Tacoma&#39;] Finn Carpenter Residence: San Diego FavoriteFood: Pizza Birth Day: December 12 Cars: [&#39;2012 Nissan Xterra&#39;] Jake Warren Residence: San Diego FavoriteFood: Burger Birth Day: September 8 Cars: kv . q1 = &quot;&quot;&quot;Is the sky blue a. Yes b. No&quot;&quot;&quot; q2 = &quot;&quot;&quot;How many states are there in the US? a. 45 b. 50 c. 100&quot;&quot;&quot; questions = {q1:&quot;a&quot;,q2:&quot;b&quot;} name = input(&quot;enter your name:&quot;) print(&quot;Hello&quot;, name) score = 0 for i in questions: print(i) ans = input(&quot;enter the answer: (a/b):&quot;) if ans==questions[i]: print(&quot;correct&quot;) score=score+1 print(score, &quot;point&quot;) else: print(&quot;wrong&quot;) . Hello Jake Is the sky blue a. Yes b. No correct 1 point How many states are there in the US? a. 45 b. 50 c. 100 correct 2 point .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/08/30/ForLoop.html",
            "relUrl": "/2022/08/30/ForLoop.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Football Quiz",
            "content": "def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;Quaterback&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;What position throws the ball?&quot;) . Question: What position throws the ball? Answer: Quaterback . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;Tom Brady&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;What NFL player has the most Superbowl rings?&quot;) . Question: What NFL player has the most Superbowl rings? Answer: Tom Brady . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;11&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;How many players are on a football field at once?&quot;) . Question: How many players are on a football field at once? Answer: 11 . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;17&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;How many games are in the NFL regular season?&quot;) . Question: How many games are in the NFL regular season? Answer: 17 . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;Bengals&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;What team does Joe Burrow play for?&quot;) . Question: What team does Joe Burrow play for? Answer: Bengals .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/08/28/notebookquiz.html",
            "relUrl": "/2022/08/28/notebookquiz.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "First Bash Post",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /Users/jakewarren/vscode exists. Directory /Users/jakewarren/vscode/APCSP exists. .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/coding/2022/08/26/bash.html",
            "relUrl": "/coding/2022/08/26/bash.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Football",
            "content": "Jakes Blog . All about football . My experience with football. I am a football player and I play cornerback for the Del Norte Nighthawks. . Football Picture . . I am hoping we have a great season. Our team has put in a lot of work this season. We are hoping to win a championship. . Record: 2-0 . EHS: 42-0 Win | UCHS: 47-41 Win | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/football/2022/08/24/football-markdown-post.html",
            "relUrl": "/football/2022/08/24/football-markdown-post.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "School Page",
            "content": "School Page . Trimester 1 . Period 1: APES . Monday, Tuesday, Thurday: 8:35 AM- 9:44 AM | Wednesday: 9:55 AM- 10:53 AM | Friday: 8:35 AM- 9:49 AM Period 2: English . | Monday, Tuesday, Thurday: 9:49 AM- 10:58 AM | Wednesday: 10:58 AM- 11:56 AM | Friday: 9:54 AM- 11:08 AM Period 3: AFA . | Monday, Tuesday, Thurday: 11:13 AM- 12:22 PM | Wednesday: 12:11 PM- 1:09 PM | Friday: 11:23 AM- 12:37 PM Period 4: Computer Science . | Monday, Tuesday, Thurday: 12:57 PM- 2:06 PM | Wednesday: 1:44 PM- 2:42 PM | Friday: 1:12 PM- 2:26 PM Period 5: Football . | Monday, Tuesday, Thurday: 2:36 PM- 3:45 PM | Wednesday: 2:47 PM- 3:45 PM | Friday: 2:31 PM- 3:45 PM | . .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/school/2022/08/22/scheduale-markdown-post.html",
            "relUrl": "/school/2022/08/22/scheduale-markdown-post.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "First Notebook",
            "content": "",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/08/22/notebook.html",
            "relUrl": "/2022/08/22/notebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post12": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://jakewarren2414.github.io/FirstFastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I am a football player and I own the Jake Warren 1 Github page. . This is a personal portfolio of me. &#8617; . |",
          "url": "https://jakewarren2414.github.io/FirstFastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jakewarren2414.github.io/FirstFastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}