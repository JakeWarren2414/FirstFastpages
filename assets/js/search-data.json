{
  
    
        "post0": {
            "title": "APSCA Presentation Notes",
            "content": "Notes . They are making a spreadsheet with list of clubs | They want club executives to confirm clubs Makes it easier to verify | . | Club listing database When a club signs up it will automatically make a row in the database | Clubs can only edit their code | An Admin can kick anyone if need be | Clubs can update and delete their information | . | Club review database Students can review the club from comments | . | Clubs are required to meet minutes They have to go through a length and unorganized process of documenting in person They can just put in their documents into a database | . | . | Club Search They can search a topic of interest | . | Made a spreadsheet to stay on track | Made scrum board | Stated purpose of project | Explained backend and frontend | Met CRUD and collegeboard criteria | Plans | Showed manifesto | . Takeaways . We can make our scrumboard much more specific. We need to add dates and make it more organized. Also we can add more specific tasks | We also can make a spreadsheet to be more organized. | We can use a database where people input their weight personal records and keep on updating it We can make it to where they can only edit their own | We need to be able to explain what is frontend and what is backend | . | We have to make sure every feature meets college board requirements | Maybe we can implement an admin in our project | We can make a search feature in our website such as search for exercise | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/.%20practice/2023/01/24/APSCAPresentationNotes.html",
            "relUrl": "/.%20practice/2023/01/24/APSCAPresentationNotes.html",
            "date": " • Jan 24, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Model and Object-Oriented Programming",
            "content": "Class and Object Terms . The foundations of Object-Oriented Programming is defining a Class . In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. | A Class has ... a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self | a collection of Functions/Procedures. These are called *Methods when they exist inside a Class definition. | . | An Object is created from the Class/Template. Characteristics of objects ... an Object is an Instance of the Class/Template | there can be many Objects created from the same Class | each Object contains its own Instance Data | the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class | all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) | . | A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions ... @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) | @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) | observe all instance data (self._name, self.email ...) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email ...) | . | . Class and Object Code . # Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # define user objects u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;nick&#39;, password=&#39;123nick&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;eli&#39;, password=&#39;123eli&#39;) u5 = User(name=&#39;Hedy Lemarr&#39;, uid=&#39;hedy&#39;, password=&#39;123hedy&#39;) # put user objects in list for convenience users = [u1, u2, u3, u4, u5] # Find user print(&quot;Test 1, find user 3&quot;) u = tester(users, u3.uid, &quot;123lex&quot;) # Change user print(&quot;Test 2, change user 3&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u = tester(users, u.uid, &quot;123qwerty&quot;) # Make dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Test 3, make a dictionary&quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) print(&quot;Test 4, make a dictionary&quot;) json_string = json.dumps([vars(user) for user in users]) print(json_string) . Test 1, find user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$xTM...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$Mdz...&#34; * name: &#34;Alexander Graham Bell&#34;, id: &#34;lex&#34;, psw: &#34;sha256$FrR...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$5NU...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$uGI...&#34; Test 2, change user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$xTM...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$Mdz...&#34; * name: &#34;John Mortensen&#34;, id: &#34;jm1021&#34;, psw: &#34;sha256$5Qv...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$5NU...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$uGI...&#34; Test 3, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$xTMXFVIRJsO1bpyG$b44eefee558e9bff37d4294e9a08fb60fd2650f947bef4411b0e9b934b6a45f3&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$MdzrIhm3P9nDDTTk$84920ddf4e7b1d80d5b4b68db85005d026f94c90d71600b137482fe83a3123c7&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$5Qvlg8enI1IbeIZs$9f1df550a6ddbf612b938bdbf675166c88d775fc9e8286aea195461e7ff01cb2&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$5NUUB3XmwU2Ztbux$f6af7e9bde825a45d9ea61736bbdd9cd6c2460417dbf08bd3d7256120d0155a0&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$uGIlZSZvjxlyTWxu$74e6e966572445e5e628977e744cbdc0772f466ddf03558adad05115684d233f&#34;}] Test 4, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$xTMXFVIRJsO1bpyG$b44eefee558e9bff37d4294e9a08fb60fd2650f947bef4411b0e9b934b6a45f3&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$MdzrIhm3P9nDDTTk$84920ddf4e7b1d80d5b4b68db85005d026f94c90d71600b137482fe83a3123c7&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$5Qvlg8enI1IbeIZs$9f1df550a6ddbf612b938bdbf675166c88d775fc9e8286aea195461e7ff01cb2&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$5NUUB3XmwU2Ztbux$f6af7e9bde825a45d9ea61736bbdd9cd6c2460417dbf08bd3d7256120d0155a0&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$uGIlZSZvjxlyTWxu$74e6e966572445e5e628977e744cbdc0772f466ddf03558adad05115684d233f&#34;}] . Hacks . Add new attributes/variables to the Class. Make class specific to your CPT work. . Add classOf attribute to define year of graduation Add setter and getter for classOf | . | Add dob attribute to define date of birth This will require investigation into Python datetime objects as shown in example code below | Add setter and getter for dob | . | Add instance variable for age, make sure if dob changes age changes Add getter for age, but don&#39;t add/allow setter for age | . | Update and format tester function to work with changes | . Start a class design for each of your own Full Stack CPT sections of your project . Use new code cell in this notebook | Define init and self attributes | Define setters and getters | Make a tester | . Start Code for Hacks . from werkzeug.security import generate_password_hash, check_password_hash from datetime import date import json class User: def __init__(self, name, email, password, dob, weight): self._name = name # variables with self prefix become part of the object, self._email = email self.set_password(password) self._dob = dob self._weight = weight @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def email(self): return self._email # a setter function, allows name to be updated after initial object creation @email.setter def email(self, email): self._email = email # check if uid parameter matches user id in object, return boolean def is_email(self, email): return self._email == email # dob property is returned as string, to avoid unfriendly outcomes @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob should be have verification for type date @dob.setter def dob(self, dob): self._dob = dob # age is calculated and returned each time it is accessed @property def age(self): today = date.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) @property def classOf(self): if self._dob.month &gt;= 8: return self._dob.year + 19 else: return self._dob.year + 18 # Here it determines if the birthday is in august or higher. # If it is then the classOf will be a year high. # So if two people are born in 2005 and one is born in September, they will be 2024 but if someone is born in May then they will be 2023 # dictionary is customized, removing password for security purposes @property def dictionary(self): dict = { &quot;name&quot; : self.name, &quot;email&quot; : self.email, &quot;dob&quot; : self.dob, &quot;age&quot; : self.age, &quot;classOf&quot; : self.classOf, &quot;weight&quot; : self._weight } return dict # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.dictionary) # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;User(name={self._name}, email={self._email}, password={self._password},dob={self._dob})&#39; if __name__ == &quot;__main__&quot;: u1 = User(name=&#39;Jake Warren&#39;, email=&#39;Jacobw22751@stu.powayusd.com&#39;, password=&#39;Jake2414&#39;, dob=date(2005, 9, 8), weight=&#39;155&#39;) print(&quot;JSON ready string: n&quot;, u1, &quot; n&quot;) def info(person): print(&quot; t&quot; + &quot;name: &quot; + person.name) print(&quot; t&quot; + &quot;email: &quot; + person.email) print(&quot; t&quot; + &quot;password: &quot; + person._password) print(&quot; t&quot; + &quot;age: &quot; + str(person.age)) print(&quot; t&quot; + &quot;Class of &quot; + str(person.classOf) + &quot; n&quot;) . JSON ready string: {&#34;name&#34;: &#34;Jake Warren&#34;, &#34;email&#34;: &#34;Jacobw22751@stu.powayusd.com&#34;, &#34;dob&#34;: &#34;09-08-2005&#34;, &#34;age&#34;: 17, &#34;classOf&#34;: 2024, &#34;weight&#34;: &#34;155&#34;} . I added weight to relate to my project .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2023/01/10/PBL-model.html",
            "relUrl": "/2023/01/10/PBL-model.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "College Board Grading Practice",
            "content": "College Board Grading 1 . Project 1 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input &lt;/br&gt; - [x] Program functionality&lt;/br&gt; - [x] output&lt;/br&gt; - [x] describes the overall purpose of the program.&lt;/br&gt; - [x] describes what functionality of the program is demonstrated in the video.&lt;/br&gt; - [x] describes the input and output of the program demonstrated in the video.&lt;/br&gt; | Program has both an input and output. It describes it&#39;s purpose as finding information about a triangle and its function as showing the triangle ratios of a triangle that has been inputed. | 1/1 | 0/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type).&lt;/br&gt; - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose.&lt;/br&gt; - [x] identifies the name of the variable representing the list being used in this response.&lt;/br&gt; - [x] describes what the data contained in this list is representing in the program.&lt;/br&gt; | Has a code segment that shows the arithmetic that calculates the triangle ratios. Shows a list. Has name of variables and describes the data in the list. | 1/1 | 1/1 | . 3. Managing Complexity | - [x] includes a program code segment that shows a list being used to manage complexity in the program.&lt;/br&gt; - [] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list&lt;/br&gt; | Has code segment shoring the complexity but doesn&#39;t explain it. They just gave another piece of code. | 0/1 | 0/1 | . 4. Procedural Abstraction | - [x] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure.&lt;/br&gt; - [x] Program code segment showing where the student-developed procedure is being called.&lt;/br&gt; - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program.&lt;/br&gt; | Has code segment showing the student-developed procedure and has parameter and shows where the SDP is being called. Finally describes the functionality of the program well. | 1/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing&lt;/br&gt; - [x] selection&lt;/br&gt; - [] iteration&lt;/br&gt; - [] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it.&lt;/br&gt; | Has sequencing, selection but no iteration or explaination. | 0/1 | 1/1 | . 6. Testing | - [] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute.&lt;/br&gt; - [x] describes the condition(s) being tested by each call to the procedure.&lt;/br&gt; - [x] identifies the result of each call.&lt;/br&gt; | Doesn&#39;t have two calls to the selected procedure only has noe. It does describe the condition and identify the result however. | 0/1 | 1/1 | . Total | | | 3/6 | 4/6 | . Project 2 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output - [x] describes the overall purpose of the program. - [x] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Met all the criteria for this section. Has input and output and describes the function and purpose. The function is placing blocks that move and the purpose is entertainment. | 1/1 | 1/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type). - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [x] identifies the name of the variable representing the list being used in this response. - [x] describes what the data contained in this list is representing in the program. | Met all the criteria for this section. Has proper code segments explaining how data is stored and remebered from the users input. The blocks moving. It does fulfill the purpose. Shoes name of variable and describes what the data is contained in. | 1/1 | 1/1 | . 3. Managing Complexity | - [x] includes a program code segment that shows a list being used to manage complexity in the program. - [x] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | Has code segment showing a list and explains how it could be different. | 1/1 | 1/1 | . 4. Procedural Abstraction | - [] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [] Program code segment showing where the student-developed procedure is being called. - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program. | This response describes the code segment but it never had a clear code segment depicted that showed the student developed procedure with 1+ parameter or SDP being called. | 0/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [] iteration - [] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Has sequencing and selection but doesn&#39;t have iteration and doesn&#39;t explain. | 0/1 | 1/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [x] describes the condition(s) being tested by each call to the procedure. - x[] identifies the result of each call. | All tests done correctly | 1/1 | 1/1 | . Total | | | 4/6 | 6/6 | . Hacks . There are a couple differences between my grading and college board. Mine seemed to be a little harder. Whenever a question asked to describe something or give a code segment. I would look at the question and not see anything. However the student cold have explained it elsewhere in their response. Also, I was also a bit confused on where sequencting, selection, and iteration were. I tried to look for it but I had to infer it from the video. | My program will need to be very complex and able to have an important output input, function, and purpose. It can&#39;t just be a forum with information. It has to serve a purpose. | The first CPT failed on describing the purpose. It is important on knowing the difference between function and purpose. Purpose is what the goal of the program is. Function is how the function achieves it. A goal could be entertainment and the function could be a card game of some sort. Also this same project did not explain things very well. | College Board Grading 2 . Project 3 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output - [] describes the overall purpose of the program. - [] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Shows input, output and program functionality in the video but doesn&#39;t describe the purpose or function in depth. They say the purpose is to identify animals when that would be the function and the purpose would be entertainment or education. | 0/1 | 0/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type). - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [x] identifies the name of the variable representing the list being used in this response. - [x] describes what the data contained in this list is representing in the program. | Program demonstrates all the criteria. | 1/1 | 1/1 | . 3. Managing Complexity | - [] includes a program code segment that shows a list being used to manage complexity in the program. - [] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | The code segments does not show how the program is complex. Also it doesn&#39;t describe them very well. | 0/1 | 0/1 | . 4. Procedural Abstraction | - [x] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [] Program code segment showing where the student-developed procedure is being called. - [] describes what the identified procedure does and how it contributes to the overall functionality of the program. | The Program has a parameter and it affects the functionality but doesn&#39;t have a code segmnet showing this parameter or describe it. | 0/1 | 0/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [] iteration - [] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Has sequensing and selection but no clear iteration and doesn&#39;t explain it/td&gt; 0/1 | 0/1 | &lt;/tr&gt; 6. Testing | - [1] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [1] describes the condition(s) being tested by each call to the procedure. - [1] identifies the result of each call. | All tests done correctly | 1/1 | 1/1 | . Total | | | 2/6 | 1/6 | . &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Project 4 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output&lt;/br&gt; - [x] describes the overall purpose of the program. - [x] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Demonstrates all criteria | 1/1 | 1/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type). - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [x] identifies the name of the variable representing the list being used in this response. - [x] describes what the data contained in this list is representing in the program. | Demonstrates all criteria. | 1/1 | 1/1 | . 3. Managing Complexity | - [x] includes a program code segment that shows a list being used to manage complexity in the program. - [] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | Has code segment that shows list but doesn&#39;t explain it very well. | 0/1 | 1/1 | . 4. Procedural Abstraction | - [x] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [x Program code segment showing where the student-developed procedure is being called. - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program. | Demonstrates all criteria. Has parameter, explains it and shows where the STP is being called. | 1/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [x] iteration - [x] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Has sequencing, selection, iteration, and explains how the alogorithm implements them. | 1/1 | 1/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [x] describes the condition(s) being tested by each call to the procedure. - [x] identifies the result of each call. | All tests done correctly | 1/1 | 1/1 | . Total | | | 5/6 | 6/6 | . Project 5 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output - [x] describes the overall purpose of the program. - [x] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Meets all criteria. | 1/1 | 0/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type). - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [x] identifies the name of the variable representing the list being used in this response. - [x] describes what the data contained in this list is representing in the program. | Meets all criteria. | 1/1 | 1/1 | . 3. Managing Complexity | - [] includes a program code segment that shows a list being used to manage complexity in the program. - [x] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | Explains the list but the list in not sufficicant. | 0/1 | 1/1 | . 4. Procedural Abstraction | - [] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [x] Program code segment showing where the student-developed procedure is being called. - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program. | Has code segment showing where the STP is being called and describes the procedure and the contribution the the function but doesn&#39;t have a STP with one parameter. | 0/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [x] iteration - [x] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Has selection, sequencing, iteration, and goes over how each of them works. | 1/1 | 1/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [x] describes the condition(s) being tested by each call to the procedure. - [x] identifies the result of each call. | All tests done correctly. | 11 | 1/1 | . Total | | | 4/6 | 5/6 | . Project 6 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output - [x] describes the overall purpose of the program. - [x] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | | 1/1 | 1/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type). - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [x] identifies the name of the variable representing the list being used in this response. - [] describes what the data contained in this list is representing in the program. | | 0/1 | 0/1 | . 3. Managing Complexity | - [] includes a program code segment that shows a list being used to manage complexity in the program. - [x] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | | 0/1 | 0/1 | . 4. Procedural Abstraction | - [x] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [x] Program code segment showing where the student-developed procedure is being called. - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program. | | 1/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [x] iteration - [x] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | | 1/1 | 1/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [x] describes the condition(s) being tested by each call to the procedure. - [x] identifies the result of each call. | | 1/1 | 0/1 | . Total | | | 4/6 | 4/6 | . College Board Grading 3 . Project 7 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output - [x] describes the overall purpose of the program. - [x] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Has an input as the putting in of rock, papaer or sciccors, and an output of the computer choosing an option and either tieing, winning, or losing. Also describes them. The purpose is entertainment and the function is playing rock papaer scisscors. | 1/1 | 1/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type). - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [x] identifies the name of the variable representing the list being used in this response. - [] describes what the data contained in this list is representing in the program. | Has a list with rock, paper and scissors. This list is being used fulfulling the function of the game and variables have names representing their function in the program. Doesn&#39;t describe very well. | /1 | 0/1 | . 3. Managing Complexity | - [x] includes a program code segment that shows a list being used to manage complexity in the program. - [] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | Has a table that shows complexity but cannot explain exactly how complex it is. It also is a very simple design. | 1/1 | 0/1 | . 4. Procedural Abstraction | - [] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [] Program code segment showing where the student-developed procedure is being called. - [] describes what the identified procedure does and how it contributes to the overall functionality of the program. | Doesn&#39;t specify where the parameter is, doesn&#39;t describe, and doesn&#39;t identify the procedure | 0/1 | 0/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [x] iteration - [x] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Has sequencing by asking if the user if they want to play and then proceeding with the game. Has selection of rock, paper, or scissors. Iteration is made y the &quot;do you want to play again&quot; line of code. Doesn&#39;t explain the code however. | 0/1 | 1/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [x] describes the condition(s) being tested by each call to the procedure. - [x] identifies the result of each call. | All tests done correctly | 1/1 | 1/1 | . Total | | | 2/6 | 3/6 | . Project 8 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output - [x] describes the overall purpose of the program. - [x] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Has input of the words that are put in and many different outputs such as getting the correct option or not, losing a life, and winning or losing. Describes this. The functionality is playing hngman and the purpose is entertainment. | 1/1 | 1/1 | . 2. Data Abstraction | - [] Program code segment that shows how data has been stored in this list (or other collection type). - [] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [] identifies the name of the variable representing the list being used in this response. - [x] describes what the data contained in this list is representing in the program. | Doesn&#39;t have a clear list but meets the other criteria. Able to use the code in the program and describes. | 0/1 | 1/1 | . 3. Managing Complexity | - [x] includes a program code segment that shows a list being used to manage complexity in the program. - [x] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | Shows the complexity of hangman in code segments. Explains it well | 1/1 | 1/1 | . 4. Procedural Abstraction | - [x] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [x] Program code segment showing where the student-developed procedure is being called. - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program. | Has parameter and shows both calls. When they put in 1 it picks the word hello. If they type in a letter it will either be wrong or show up in the correct spot on the screen. | 1/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [x] iteration - [x] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Has sequencing from the lives aspect going down after the letter typed in. Selection is shown by being able to pick between letters. Iteration shown by playing again. Explains well | 1/1 | 1/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [x] describes the condition(s) being tested by each call to the procedure. - [x] identifies the result of each call. | All tests done correctly. | 1/1 | 1/1 | . Total | | | 5/6 | 6/6 | . Project 9 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output - [x] describes the overall purpose of the program. - [x] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Has input of choosing the state or asking to see the flag and shows a new screen. The purpose is education. It does this by showing information about US states. | 1/1 | 1/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type). - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [x] identifies the name of the variable representing the list being used in this response. - [x] describes what the data contained in this list is representing in the program. | Has list in the program of all the US states. Shows it working in drag down selection screen. Identifies variables as the different states. Explains correctly. | 1/1 | 0/1 | . 3. Managing Complexity | - [] includes a program code segment that shows a list being used to manage complexity in the program. - [] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | Does not have a list to manage complexity. It just has a bunch of &quot;if else&quot; statements which makes the code way too long. | 0/1 | 0/1 | . 4. Procedural Abstraction | - [x] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [x] Program code segment showing where the student-developed procedure is being called. - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program. | Does not have identifiable parameter and does not use it or explain it. | 0/1 | 0/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [x] iteration - [x] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Has sequecing in the aspect of going from one page to another. Has selection by choosing different states. Has iteration by choosing different states after each other and repeating the process. | 1/1 | 0/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [x] describes the condition(s) being tested by each call to the procedure. - [x] identifies the result of each call. | All tests done correctly | 1/1 | 0/1 | . Total | | | 4/6 | 1/6 | . Project 10 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output - [x] describes the overall purpose of the program. - [x] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Has an input of pressing a button to send the hook down and the output of the hook being sent down and catching a fish. THe purpose is entertainment and the function is having a fishing game. Explains everything correctly. | 1/1 | 1/1 | . 2. Data Abstraction | - [] Program code segment that shows how data has been stored in this list (or other collection type). - [] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [] identifies the name of the variable representing the list being used in this response. - [] describes what the data contained in this list is representing in the program. | Does not have an actual list. Has complex code however it doesn&#39;t respeble a list for the funciton. | 0/1 | 1/1 | . 3. Managing Complexity | - [x] includes a program code segment that shows a list being used to manage complexity in the program. - [x] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | Turned a very complex code into a very short amount. Was able to use a list to do this. Ecplains everything well. | 1/1 | 1/1 | . 4. Procedural Abstraction | - [x] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [] Program code segment showing where the student-developed procedure is being called. - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program. | Has parameter and both calls. However does not have a code segment explaining it. Only explains in words. | 0/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [x] iteration - [x] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Has sequecing of playing through the game. Selection when it asks if you want hard or easy. Iteration when you play again and it eplains it all. | 1/1 | 1/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [x] describes the condition(s) being tested by each call to the procedure. - [x] identifies the result of each call. | All tests done correctly | 1/1 | 0/1 | . Total | | | /6 | 5/6 | . Review . Overall I learned a lot. On grading number threes. I am getting much better at grading and accurate but there is still work to be done. I need to be able to identify what are lists and what are not and what are parameters and what are not. | . &lt;/div&gt; | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/.%20practice/2023/01/05/CollegeBoardGradingPractice.html",
            "relUrl": "/.%20practice/2023/01/05/CollegeBoardGradingPractice.html",
            "date": " • Jan 5, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Lesson Grades",
            "content": "3.1-3.2 3.3-3.4 3.8 and 3.10 3.9 and 3.11 3.12-3.13 3.14-3.15 3.16 3.17-3.18 Total . 1/1 | 0.95/1 | 1.8/2 | 0.95/1 | 0.85/1 | 0.95/1 | 0.97/1 | /1 | /9 | . Grade Page | Grade Page | Grade Page | Grade Page | Grade Page | Grade Page | Grade Page | N/A | Grade Page | . My Fastpages Notes | My Fastpages Notes | My Fastpages Notes | My Fastpages Notes | My Fastpages Notes | My Fastpages Notes | My Fastpages Notes | My Fastpages Notes | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/.tri%202%20learning/2022/12/15/LessonGrades.html",
            "relUrl": "/.tri%202%20learning/2022/12/15/LessonGrades.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "3.17/3.18- Algorithmic Efficiency/Undecidable Problems",
            "content": "Notes . An Undecidable problem is a problem where the answer is clear such as yes or no. However, not every input is able to correctly answer all the inputs. | An unsolvable problem is a problem where the solution is not real. There will never be a solution to the algorithm. | A collatz is the idea of wheter or not every number every made, repeating the two simple arithmetic operations will eventually transform every positive integer into 1 | Hailstone numbers in a collatz sequence thatnis generated until it equals one. | An iteration is the process of repeating in code until a condition is met. | . Hacks . Hacks 1 . num = [] count = 0 def collatz(i): global count global num while i &gt; 1: if (i % 2): # i is odd i = 3*i + 1 count +=1 num.append(i) else: # i is even i = i//2 count +=1 num.append(i) else: print(count) print(num) i = int(input(&#39;Enter i: &#39;)) collatz(i) . 16 [22, 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1] . Hacks 2 . The first block is inefficiant because it doesn&#39;t use greater than or equal signs. Overall it makes me use 10x more if statments and is very annoying. The second block of code uses greater than or equal signs and is much more efficiant. | . score = int(input(&quot;What score did you get out of 100?&quot;)) if score == 100: print(&quot;Got got an A&quot;) if score == 99: print(&quot;Got got an A&quot;) if score == 98: print(&quot;Got got an A&quot;) if score == 97: print(&quot;Got got an A&quot;) if score == 96: print(&quot;Got got an A&quot;) if score == 95: print(&quot;Got got an A&quot;) if score == 94: print(&quot;Got got an A&quot;) if score == 93: print(&quot;Got got an A&quot;) if score == 92: print(&quot;Got got an A&quot;) if score == 91: print(&quot;Got got an A&quot;) if score == 90: print(&quot;Got got an A&quot;) if score == 89: print(&quot;Got got an B&quot;) if score == 88: print(&quot;Got got an B&quot;) if score == 87: print(&quot;Got got an B&quot;) if score == 86: print(&quot;Got got an B&quot;) if score == 85: print(&quot;Got got an B&quot;) if score == 84: print(&quot;Got got an B&quot;) if score == 83: print(&quot;Got got an B&quot;) if score == 82: print(&quot;Got got an B&quot;) if score == 81: print(&quot;Got got an B&quot;) if score == 80: print(&quot;Got got an B&quot;) if score == 79: print(&quot;Got got an C&quot;) if score == 78: print(&quot;Got got an C&quot;) if score == 77: print(&quot;Got got an C&quot;) if score == 76: print(&quot;Got got an C&quot;) if score == 75: print(&quot;Got got an C&quot;) if score == 74: print(&quot;Got got an C&quot;) if score == 73: print(&quot;Got got an C&quot;) if score == 72: print(&quot;Got got an C&quot;) if score == 71: print(&quot;Got got an C&quot;) if score == 69: print(&quot;Got got an D&quot;) if score == 68: print(&quot;Got got an D&quot;) if score == 67: print(&quot;Got got an D&quot;) if score == 66: print(&quot;Got got an D&quot;) if score == 65: print(&quot;Got got an D&quot;) if score == 64: print(&quot;Got got an D&quot;) if score == 63: print(&quot;Got got an D&quot;) if score == 62: print(&quot;Got got an D&quot;) if score == 61: print(&quot;Got got an D&quot;) if score == 60: print(&quot;Got got an D&quot;) if score &lt;= 59: print(&quot;Got got an F&quot;) . Got got an F . score = int(input(&quot;What score did you get out of 100?&quot;)) if 90 &lt;= score &lt;= 100: print(&quot;Got got an A&quot;) if 80 &lt;= score &lt;= 89: print(&quot;Got got an B&quot;) if 70 &lt;= score &lt;= 79: print(&quot;Got got an C&quot;) if 60 &lt;= score &lt;= 69: print(&quot;Got got an D&quot;) if score &lt;= 59: print(&quot;Got got an F&quot;) . Got got an D . Hacks 3 . Algorithm efficiency is how short or simple a code can be for a certain function. You want to be able to make your code in the easiest way possible. This is called lazy coding. | . Hacks 4 . tasks = [&quot;Wake up&quot;, &quot;Go to school&quot;, &quot;Go to Practice&quot;, &quot;Eat&quot;, &quot;Go to sleep&quot;] def complete_tasks(tasks): for task in tasks: if task == &quot;Wake up&quot;: print(&quot;Currently waking up&quot;) elif task == &quot;Go to school&quot;: print(&quot;Currently going to school&quot;) elif task == &quot;Go to Practice&quot;: print(&quot;Currently going to practice&quot;) elif task == &quot;Eat&quot;: print(&quot;Currently eating&quot;) elif task == &quot;Go to sleep&quot;: print(&quot;Currently sleeping&quot;) complete_tasks(tasks) . Currently waking up Currently going to school Currently going to practice Currently eating Currently sleeping . Vocab: . An Undecidable problem is a problem where the answer is clear such as yes or no. However, not every input is able to correctly answer all the inputs. | An unsolvable problem is a problem where the solution is not real. There will never be a solution to the algorithm. | A collatz is the idea of wheter or not every number every made, repeating the two simple arithmetic operations will eventually transform every positive integer into 1 | Hailstone numbers in a collatz sequence thatnis generated until it equals one. | An iteration is the process of repeating in code until a condition is met. | . num = [] count = 0 def collatz(i): global count global num while i &gt; 1: if (i % 2): # i is odd i = 3*i + 1 count +=1 num.append(i) else: # i is even i = i//2 count +=1 num.append(i) else: print(count) print(num) i = int(input(&#39;Enter i: &#39;)) collatz(i) . 5 [16, 8, 4, 2, 1] . i = 1 while i &lt;= 10: print(i ** 2) i += 1 . 1 4 9 16 25 36 49 64 81 100 .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/.tri%202%20learning/2022/12/14/317~318.html",
            "relUrl": "/.tri%202%20learning/2022/12/14/317~318.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "3.16- Simulations",
            "content": "Notes . A simulation is an fake version of a process | An experiment is made to make a discoverey | Simulations are safer and cheaper but not as accurate | Sometimes it can be advantagous for an experiment and sometimes for a simulaiton | ## Hacks | . One simulation idea could be one for a business. They could simulate how much of a product would be bought or taken within a certain amount of time. They can determine how much product they need and how fast they need to make it. This is a simulation because they are not occuring in real life. It&#39;s advatages are that is can help save money however it is not completely accurate. This would be better than an exerpiment because it saves money. Another could be a video game such as &quot;The Sims&quot; which simulates a person. | | The dice rolling simulation simulates a dice. It asks the user to input how many dice they want to roll and then it gives the amount of outputs as the user inuted. So if the user inputted three there would be three outputs. Each of these inputs are a random number between 1-6 simulating the different sides. In real life the user would pick up how many dices they would want to roll then they would roll them. This is a simulation because it simulates a dice roll. Its advantages are that you don&#39;t need a dice. Its disadvantages are that it is not as fun. However the function is mostly the same. This would be much better as an experiment because it is more emersive. The main function of dices is board games which are made for fun so we have to maximize that aspect. The code firslty uses a parse inpu command to fetch the data that the user input which would be a number 1-6. Then the random library is imported. Through this the roll variable is set as a random integer 1-6 to simulate the dice&#39;s sides. Finally it is printed. | I am adding a function to the dice. I am making it a game so every number corresponds to a certain space on a board game that changes the game. I also added an extra two sides to the dice and the number of dice increased by 2. | Quiz . questions_number = 6 answers_correct = 0 questions = [ &quot;True or False: Simulations will always have the same result. n A: True, n B: False&quot;, &quot;True or False: A simulation has results that are more accurate than an experiment n A: True, n B: False&quot;, &quot;True or False: A simulation can model real world events that are not practical for experiments n A: True, n B: False&quot;, &quot;Which one of these is FALSE regarding simulations n A: Reduces Costs, n B: Is safer than real life experiments, n C: More Efficient, n D: More accurate than real life experiments&quot;, &quot;Which of the following scenarios would be the LEAST beneficial to have as a simulation n A: A retail company wants to identify the item which sold the most on their website, n B: A restaurant wants to determine if the use of robots will increase efficiency, n C: An insurance company wants to study the impact of rain on car accidents, n D: A sports car company wants to study design changes to their new bike design &quot;, &quot;Which of the following is better to do as a simulation than as a calculation n A: Keeping score at a basketball game, n B: Keeping track of how many games a person has won, n C: Determining the average grade for a group of tests, n D: Studying the impact of carbon emissions on the environment&quot; ] question_answers = [ &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;A&quot;, &quot;D&quot; ] print(&quot;Welcome to the Simulations Quiz!&quot;) def ask_question (question, answer): print(&quot; n&quot;, question) user_answer = input(question) print(&quot;You said: &quot;, user_answer) if user_answer == answer: print(&quot;Correct!&quot;) global answers_correct answers_correct = answers_correct + 1 else: print(&quot;You are incorrect&quot;) for num in range(questions_number): ask_question(questions[num], question_answers[num]) print(&quot;You scored: &quot;, answers_correct, &quot;/6&quot;) . Welcome to the Simulations Quiz! True or False: Simulations will always have the same result. A: True, B: False You said: B Correct! True or False: A simulation has results that are more accurate than an experiment A: True, B: False You said: B Correct! True or False: A simulation can model real world events that are not practical for experiments A: True, B: False You said: A Correct! Which one of these is FALSE regarding simulations A: Reduces Costs, B: Is safer than real life experiments, C: More Efficient, D: More accurate than real life experiments You said: D Correct! Which of the following scenarios would be the LEAST beneficial to have as a simulation A: A retail company wants to identify the item which sold the most on their website, B: A restaurant wants to determine if the use of robots will increase efficiency, C: An insurance company wants to study the impact of rain on car accidents, D: A sports car company wants to study design changes to their new bike design You said: A Correct! Which of the following is better to do as a simulation than as a calculation A: Keeping score at a basketball game, B: Keeping track of how many games a person has won, C: Determining the average grade for a group of tests, D: Studying the impact of carbon emissions on the environment You said: D Correct! You scored: 6 /6 . def parse_input(input_string): if input_string.strip() in {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;,&quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;}: return int(input_string) else: print(&quot;Please enter a number from 1 to 8.&quot;) raise SystemExit(1) import random def roll_dice(num_dice): roll_results = [] for _ in range(num_dice): roll = random.randint(1, 8) roll_results.append(roll) return roll_results num_dice_input = input(&quot;How many dice do you want to roll? [1-8] &quot;) num_dice = parse_input(num_dice_input) roll_results = roll_dice(num_dice) print(&quot;you rolled:&quot;, roll_results) for i in roll_results: if i == 1: print(&#39;Discard a card&#39;) if i == 2: print(&#39;Draw a card&#39;) if i == 3: print(&#39;Move back a space&#39;) if i == 4: print(&#39;Go back to start&#39;) if i == 5: print(&#39;Nothing happens&#39;) if i == 6: print(&#39;Lose a point&#39;) if i == 7: print(&#39;Gain a point&#39;) if i == 8: print(&#39;Skip to finish. &#39;) . you rolled: [3, 5, 6, 3, 1, 3] Move back a space Nothing happens Lose a point Move back a space Discard a card Move back a space . For my extra credit hack I am making a simulation for feeding a certain amount of people at an event. You can input the amount of people that are going to be at the event and it chooses a random number from 1-3 to determine how much tacos each person will eat which will all ow us to determine how much to make. First the code takes the user input and splits it into indivdual values that equal one. Then each integer is multiplied by a random number 1-3 and then it adds the values for the number of tacos that need to be made. | import random # prompt the user for a number people = input(&quot;How many people do we need.&quot;) # convert the input to an integer people = int(people) # create a list to store the individual numbers numbers = [] # iterate over a range of numbers from 0 to the input number for i in range(people): # add the value 1 to the list numbers.append(1) # create a list to store the multiplied numbers tacos = [] # iterate over each number in the list for num in numbers: # generate a random number between 1 and 3 factor = random.randint(1, 3) # perform the multiplication multiplied_num = num * factor # add the multiplied number to the list of multiplied numbers tacos.append(multiplied_num) # add up all of the multiplied numbers total = sum(tacos) # print the total print(&quot;We need&quot;, total, &#39;tacos&#39;) . We need 111 tacos . Vocab: . A simulation is an fake version of a process | An experiment is made to make a discoverey | . import random color = random.randint(1,8) if color == 1 | 2 | 3: print(&#39;Green&#39;) elif color == 4 | 5: print(&#39;Blue&#39;) elif color == 6: print(&#39;Purple&#39;) elif color == 7: print(&#39;Red&#39;) elif color == 8: print(&#39;Orange&#39;) .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/.tri%202%20learning/2022/12/13/316.html",
            "relUrl": "/.tri%202%20learning/2022/12/13/316.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Tech Industry Visitors; Extra Credit Notes",
            "content": "Notes . Katherine She was born in Vietnam | She moved to San Fran in 2004 Then San Diego | . | Recieved finance degree | MBA at USC | She was a finance major which made her an investment banker She didn&#39;t like it | . | She twitched to high tech degree She learned how to surf | . | Shw worked for qualcom | HP INC Create technology that makes life better for everyone everywhere | . | Qualcomm Inventing the tech the world loves | . | Thermo Fisher Scientific Enable our cutomers to make the world healthier, cleaner, and safer | 125000 employees | 7000 R and D Scientists | $1.5B invested into R and D | $40B in revenue | . | She loves high tech She uses the service a lot which makes it more interesting | It was more for her than investment banking | . | She likes how you can take a concept and build it | . | Kris Porter Software Engineer SRE, DevOps, Infastructure | . | Livermore High School alum | He liked STEM | Went to UCLA for electrical engineering | Master&#39;s degree in mechanical enginnering at Cal State LA | He failed his first Comp Sci class | Center for Embedded Netwrked Sensors Networked infomechanical systems Introduced to the linux operating systems, software sevelopment life cycle | . | Finished Graduate school, stock market, had crashed Hard to find job | . | NBC universal straming media infastruture | Intro to DevOps, transition to Qualcomm | Working at twitter | He set up streaming platforms for Olympics | CCNA training | Machine learning and deep learing (Qualcomm) | Python (Udmey) | Data structures, algortithms | Projects Streaming media infacsturcture for the 2012 Olympic Games | Analytics infastructure projects LocationSmart, Qualcomm | Twitter New DataCenter Deployment | Migrating HomeTimeline to GraphQL | . | . | . | Different companies use different methodolgy in different ways depending on their purpose | Agile methodolgy is very important in todays market because of the high demand and competition | You can work remotly for any company anywhere in the world | Don&#39;t wait to get fired to look for job If you know you are getting a new CEO look for other jobs as a precaustion | . | The most important skills in the tech industry are continuous learning and not being concerned about things you see on the news Learning how to use different languages in different ways | Be adaptive Lots of changes | . | Listen to requirments Able to translate it to solving problems and requirments | Be able to communicate | . | . | The big chanllenges in the tech industry are: Changes | Fixing errors | . | Some companies are much different than others in terms of workload and deadlines Harder work in not neccaraily worse Some people like this environment | . | Find the enviornment that is correct for you | Some people like parents need flexible schedules to do other tasks such as picking up kids from school | . | Different companies make their own tools, repositories, etc. They don&#39;t use flask, fastpages, or github | . | Tech can help other industries such as business Problem solving | Critical thinking | . | He doesn&#39;t use AWS and things that much | Coding can hellp with invesment and finance by understanding stocks and online businesses Understaning algorithms and patterns | . | . Review . Overall I learned a lot from this presentation. I never really wanted to major in computer science bdfore this. I always knew it was a great paying major but very hard. Quite frankly it isn&#39;t exactly what I want to do with my life. However, this presentation overall taught me how valuable of a skill computer sciecne is. Similar to Katherine, I want to major in a finance related field. If this doesn&#39;t work out I want to have a backup plan. So maybe in my college carrer I can have a minor in computer science. It will help me with other fields, skills, and give me a possible backup plan. I still need to learn a lot more about what I want to do with my life but this helped me get a better idea. | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/.tri%202%20learning/2022/12/12/ExtraCreditNotes.html",
            "relUrl": "/.tri%202%20learning/2022/12/12/ExtraCreditNotes.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "3.14-3.15- Libraries and Random Values",
            "content": "Notes . A software library contains procedures that can be used in the creation of new programs. | Existing segments of code can come from internal or external sources, ie. libraries or previously written code. | The use of libraries simplifies the task of creating complex programs. | Application program interfaces (APIs) are specifications for how the procedures in a library behave and can be used. | Documentation for a library or API is necessary in understanding the key behaviors provided by the API/library and how to utilize them in your work. | A library is a collection of code from an external source that can be used to add functionality to a program. | Libraries are very useful, as they can be used to save time and effort in the development process. | Libraries are usually included in a program using a special keyword called &quot; .&quot; This keyword tells the program to look for the library and use its code. | Randomization generates a random value beteen two numbers | . Hacks . Hacks 1 . 1. . import random contestant1 = random.randint(1,10) contestant2 = random.randint(1,10) print (&#39;Contestant&#39;, contestant1, &#39;vs&#39;, &#39;contestant&#39;, contestant2) . Contestant 2 vs contestant 7 . I imported the random library database. By using this I used the random int line of code to choose a bumber between 1 and 10. I then put these two equal to a different variable. Finally I made a print statement to make two random contestents of the ten to go agianst each other. This could be used for making a schedule for a sports league. | Hacks 2 . The inport random function imports the database from the random library. It allows us to use new lines of code such as &quot;rand.int&quot;. Now we get to make a lot more lines fo code that have to do with randomization | Some other things we can import other than random is math, turtles, flask, dictionary, and sqlalchemy. You can import many things. Different people have made these different libraries so the amount of things you can import is based on what other people have made. | Hack 3 . 1. . import random color = random.randint(1,8) if color == 1 | 2 | 3: print(&#39;Green&#39;) elif color == 4 | 5: print(&#39;Blue&#39;) elif color == 6: print(&#39;Purple&#39;) elif color == 7: print(&#39;Red&#39;) elif color == 8: print(&#39;Orange&#39;) . Orange . The numbers that are outputted for RANDOM(12,20) are 12, 13, 14, 15, 16, 17, 18, 19, and 20. No numbers are excluded | Vocab . Library: A library is an API that is imported from an external source. It is a compiled amount of code that all helps with a similar function. | Randomization: A type of decision making a program does that doesn&#39;t have a specific order to what is picked. | APIs: An API (Applicaion Programming Interface) is how different sites can share information. It recieves requests and sends responses between different servers, sites, etc. | Import: The import function is used to fetch a library and allow that library to be used in your block of code. | . # It uses the library import math which gets more advanced math operations other than arithmetic # The import is an API import math angle = input(&quot;Enter an angle in degrees: &quot;) angle = math.radians(int(angle)) result = math.sin(angle) print(&quot;The sine of the angle is: &quot;, result) . The sine of the angle is: 0.8660254037844386 . import random number = random.randint(1,10) print(number) . 10 .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/.tri%202%20learning/2022/12/12/314~315.html",
            "relUrl": "/.tri%202%20learning/2022/12/12/314~315.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Hacks",
            "content": "3.12 and 3.13- Calling Procedures/Developing Procedures . title: 3.12 and 3.13- Calling Procedures/Developing Procedures | toc: true | badges: true | categories: [.tri 2 learning] | . 3.12/3.13- Calling Procedures/Developing Procedures . A procedure is a named set of instructions that can take in parameters and return values. May be called &quot;method&quot; or &quot;function&quot; in different programming languages. | . | Parameters are independent variables used in the procedure to produce a result. It allows a procedure to execute without initially knowing specific input values. | To call a procedure you would write the name of the procedure followed by the parentheses with the parameters of the procedure | Procedures do not require parameters, but the parentheses must be there | Return values are | A return statement exits a function and instructs python to continue executing the program and to return a certain value | Value can be string, a tuple, or any other type that is being sent back to the main program | Modularity - the practice of breaking a complex program into smaller, independent parts or modules that can be used and reused in different parts of the program | Abstraction - the practice of hiding the details of how a particular code or system works and exposing only the essential features or functions that are necessary for other parts of the program to use | Duplication - having multiple duplicate code blocks, often decreasing readability and efficiency | Logic - the sequence of steps and operations that a computer follows to execute a program, including the specific instructions and decision-making processes built into the code | Procedure- a module of code that is created to complete a certain task, this is basically a function | Procedure Name- the name that is given to a function/procedure | Parameters- a variable that is used in a function to allow for data to be imported into a function | Arguments- a way to provide information to a function, usually defined outside a function and then imported into a function with parameters | | . from math import sqrt def find_sqrt(num): result = sqrt(num) return result input = int(input()) result = find_sqrt(input) print(&quot;sqrt(&quot;, input, &quot;) = &quot;, result) . sqrt( 4 ) = 2.0 . Abstracting away your program logic into seperate, modular functions is effective because it makes the code much easier to understand. Coding becomes much more organized and overall more functional. | questionnumber = 3 clothes= [] questions = [ &quot;What shirt are you going to wear?&quot;, &quot;What pants are you going to wear?&quot;, &quot;What hat are you going to wear&quot; ] def clothesask(question): print(&quot;Question: &quot;, question) response = input() print(&quot;Your response: &quot;, response) clothes.append(response) for number in range(questionnumber): clothesask(questions[number]) for i in clothes: if i == &quot;Jacket&quot; or i == &quot;Jeans&quot; or i == &quot;Beanie&quot;: print(i, &quot;It must be cold&quot;) elif i == &quot;T-Shirt&quot; or i == &quot;Shorts&quot; or i == &quot;Baseball Hat&quot;: print(i, &quot;It must be hot&quot;) else: print(i, &quot;The weather is nice&quot;) . Question: What shirt are you going to wear? Your response: jeans Question: What pants are you going to wear? Your response: jacket Question: What hat are you going to wear Your response: beanie jeans The weather is nice jacket The weather is nice beanie The weather is nice . This code above is using abstraction made me able to combine the outputs of different input to make the code more lazy and easy to program. This is very important for large projects. . import string def split_string(s): words = s.split(&quot; &quot;) new_words = [] for word in words: if word != &quot;&quot;: new_words.append(word) return words def count_words_starting_with_letter(words, letter): count = 0 for word in words: if word.lower().startswith(letter): count += 1 return count def count_words_starting_with_a_in_string(s): words = split_string(s) count = count_words_starting_with_letter(words, &quot;a&quot;) return count def count_words_starting_with_d_in_string(s): words = split_string(s) count = count_words_starting_with_letter(words, &quot;d&quot;) return count letter_tested = input(&quot;What letter would you like to count?&quot;) def count_words_starting_with_input_in_string(s): words = split_string(s) count = count_words_starting_with_letter(words, letter_tested) return count def count_words_starting_with_letter_in_string(s): words = split_string(s) count_dictionary = {} for c in string.ascii_lowercase: count_dictionary[c] = count_words_starting_with_letter(words, c) return count_dictionary s = &quot; This is a test string! Don&#39;t you think this is cool? &quot; a_count = count_words_starting_with_a_in_string(s) d_count = count_words_starting_with_d_in_string(s) letter_count = count_words_starting_with_input_in_string(s) count_dictionary_print = count_words_starting_with_letter_in_string(s) print(&quot;Words starting with a:&quot;, a_count) print(&quot;Words starting with d:&quot;, d_count) print(&quot;Words starting with&quot;, letter_tested,&quot;:&quot;, letter_count) print(&quot; nChecking all letters of alphabet:&quot;) for letter in count_dictionary_print: if count_dictionary_print[letter] != 0: print(&quot;Words starting with&quot;, letter,&quot;:&quot;, count_dictionary_print[letter]) . Words starting with a: 1 Words starting with d: 1 Words starting with k : 0 Checking all letters of alphabet: Words starting with a : 1 Words starting with c : 1 Words starting with d : 1 Words starting with i : 2 Words starting with s : 1 Words starting with t : 4 Words starting with y : 1 . Hacks 3 . Procedure Names are the names that are used to call a function or define a function. It overall makes the code much more organized. Arguments are inputs that are used to outide the function and then they are called with the function with parameters. | Addition . Add numbers . | Subtraction . . . Minus Numbers . . Multiply . . . Multiply Numbers . . Divide . . . Divide Numbers . . Vocab . Parameter: A characteristic or value that describes a particular aspect of something. | Modularity: The degree to which a system, such as a computer program, is composed of distinct, independent units that can be developed, tested, and maintained separately. | Abstraction: The ability to focus on essential features of an object or system, while ignoring or hiding unnecessary details. | Duplication: The occurrence of multiple copies of the same code, data, or other elements in a system. | Arguments: a piece of information that is passed to a function, procedure, or program when it is called or invoked. | . def add(x: int, y: int) -&gt; int: return x + y result = add(5, 10) print(result) . 15 . from abc import ABC, abstractmethod class Animal(ABC): @abstractmethod def make_sound(self): pass class Dog(Animal): def make_sound(self): print(&quot;Bark&quot;) class Cat(Animal): def make_sound(self): print(&quot;Meow&quot;) dog = Dog() dog.make_sound() cat = Cat() cat.make_sound() . Bark Meow . def calculate_area(width: float, height: float) -&gt; float: return width * height def calculate_volume(width: float, height: float, depth: float) -&gt; float: return width * height * depth area = calculate_area(10, 5) print(area) volume = calculate_volume(10, 5, 2) print(volume) volume = calculate_volume(width=10, height=5, depth=2) print(volume) . 50 100 100 .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/12/08/312~313.html",
            "relUrl": "/2022/12/08/312~313.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "3.9-3.11- Deveoping Algorithms/Binary Search",
            "content": "3.9/3.11- Deveoping Algorithms/Binary Search . Algorithms | You can make a grade callulator based on a certain persecntage and arithmetic | When collaborating or working on group projects, two people might come up with two different ways to solve a problem, and that happens a lot. | know that same goal can be achieved in many ways (the possibilities are endless) | make notes in you code! (explain how it works to others or you future self) | Boolean statements can be put into nested conditionals to cause a chain of asking wheter an item is true or false with a lot of questions. | Outlining an algorithm is very important to know how to organize your code. | Iteration is like a loop | Existing Algorithm: determining min or max of two or more numbers | computing the sum or average | identifying if an integer is even or odd | . | Binary Search: To divide a serach interval in half multiple times until something stops it | | . Hacks . Hack 1 . It is important to know that algorithms that look different can do the same thing and algorithms that look the same might have differnt results for multiple reason. If you are working with a team you have to understand what their code is saying so you can use it with them. Also it allows you to make different types of code and understand it better making you an even better programmer. | | isFriday = True isThurday = False #If Statements if isFriday == True: print(&quot;Go to Canes&quot;) else: print(&quot;It&#39;s not Friday and that sucks&quot;) if isThurday == True: print(&quot;Go to practice&quot;) . Go to Canes . isFriday = False isThursday = True # Setting Var doHomework = isThursday or not(isFriday) # If statements if doHomework == False: print(&quot;Don&#39;t do Homework&quot;) else: print(&quot;Do Homework&quot;) . Do Homework . Hacks 2 . Natural lang . Start | Are you old enought to drink | if not wait a year | do you have money | if not you&#39;re poor | if so you get beer | . age = 17 money = 4 #When they are under age they wait a year until they are over while age &lt;= 20: age = age + 1 print(age) if age &gt;= 21: if money &gt;= 3.99: print(&quot;Here is your Drink&quot;) #if they don&#39;t have enough money they will say they are poor else: print(&quot;im poor&quot;) . 18 19 20 21 Here is your Drink . Hack 3 . import random #sets variables for the game num_guesses = 0 user_guess = -1 upper_bound = 100 lower_bound = 0 #generates a random number number = random.randint(0,100) # print(number) #for testing purposes print(f&quot;I&#39;m thinking of a number between 1 and 100.&quot;) #Write a function that gets a guess from the user using input() def guess(): #add something here num = input(&quot;What is the number you are thinking of?&quot;) return num #add something here #Change the print statements to give feedback on whether the player guessed too high or too low def search(number, guess): global lower_bound, upper_bound if int(guess) &lt; int(number): print(&quot;You guessed too low&quot;) #change this lower_bound = guess return lower_bound, upper_bound elif int(guess) &gt; int(number): print(&quot;You guessed too high&quot;) #change this upper_bound = guess return lower_bound, upper_bound else: upper_bound, lower_bound = guess, guess return lower_bound, upper_bound while user_guess != number: user_guess = guess() num_guesses += 1 print(f&quot;You guessed {user_guess}.&quot;) lower_bound, upper_bound = search(number, user_guess) if int(upper_bound) == int(number): break else: print(f&quot;Guess a number between {lower_bound} and {upper_bound}.&quot;) print(f&quot;You guessed the number in {num_guesses} guesses!&quot;) . I&#39;m thinking of a number between 1 and 100. You guessed 50. You guessed too high Guess a number between 0 and 50. You guessed 29. You guessed too low Guess a number between 29 and 50. You guessed 33. You guessed too low Guess a number between 33 and 50. You guessed 40. You guessed too high Guess a number between 33 and 40. You guessed 37. You guessed too high Guess a number between 33 and 37. You guessed 35. You guessed too high Guess a number between 33 and 35. You guessed 34. You guessed the number in 7 guesses! . # . . Hack 4 . index = [12, 14, 43, 57, 79, 80, 99] mid = int(len(index) / 2) print(mid) print(index[mid]) . index = [92, 43, 74, 66, 30, 12, 1] mid = int(len(index) / 2) print(mid) print(index[mid]) . index = [7, 13, 96, 111, 33, 84, 60] mid = int(len(index) / 2) print(mid) print(index[mid]) . . Set 1: 80, Set 2: 74, Set 3: 96 | C is unsorted therefore it is correct. | Vocab . Existing Algorithm: determining min or max of two or more numbers,computing the sum or average, identifying if an integer is even or odd | Binary Search: To divide a serach interval in half multiple times until something stops it | Boolean statments: Put into nested conditionals to cause a chain of asking wheter an item is true or false with a lot of questions. | . def binary_search(arr, target): start = 0 end = len(arr) - 1 while start &lt;= end: mid = (start + end) // 2 if target &gt; arr[mid]: start = mid + 1 elif target &lt; arr[mid]: end = mid - 1 else: return mid return -1 . SkyBlue = True if SkyBlue == True: print(&quot;The Sky is Blue&quot;) . The Sky is Blue .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/.tri%202%20learning/2022/12/06/39~311.html",
            "relUrl": "/.tri%202%20learning/2022/12/06/39~311.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "3.8-3.10- Iteration/Lists",
            "content": "3.8-3.10- Iteration/Lists . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met | Iteration Statement: change the sequential flow of control by repeating a set of statements zero or more times, until a stopping condition is met | Repeat Until: if the condition evaluates to true initially, the loop body is not executed at all, due to the condition being checked before the loop | We can use stopping conditions to stop an iteration if a condition is already met | Iteration Statement - cause statements to be executed zero or more times, subject to some loop-termination criteria | The two different types of loops are for loops and while loops | The break command stops the list at the designated value | Traversing a list is the process of visiting each element in a list in a sequential order. It can be used to access, search for, and modify elements in the list. | Complete Traversal: All elements in a list are assessed | Partial Traversal: Only a given portion of elements are assessed | Iterative Traversal: When loops are used to iterate through a list and to access each single element at a time. | . Hack 3.8.1 . Iteration: A loop in a piece of code that repeats intself until a certain condition is met | A college searching app. Serach the college you are looking for on the website. Ask if has the major you want. If not then repeat serach if it does procede. Ask if the tuition is expensive. Ff it is repeat serach if it is not then complete code. | teams = [&quot;Bengals&quot;, &quot;Cowboys&quot;, &quot;Texans&quot;, &quot;Saints&quot;] for i in teams: if i == &quot;Saints&quot;: print(i + &quot; is found&quot;) break else: print(i + &quot; are not Saints&quot;) . Bengals are not Saints Cowboys are not Saints Texans are not Saints Saints is found . Hack 3.8.2 . An Iteration statment is like an iteration but still different. It repeats a loop until this loop is commanded to stop by a condition. It stops intead of proceeding. | for i in reversed(range(1,11)): print(i) . 10 9 8 7 6 5 4 3 2 1 . numbers = 0 n = 1 while numbers &lt; 80: numbers = 3+(n-1)*13 n = n + 1 print(numbers) . 3 16 29 42 55 68 81 . Section 10 Notes . nums = [10, 15, 20, 25, 30, 35] mnums = min(nums) for i in nums: if i &gt; mnums: mnums = mnums + 5 else: mnums = mnums + 5 print(mnums) . 40 . . Vocab . Iteration Statements: change the sequential flow of control by repeating a set of statements zero or more times, until a stopping condition is met | Repeat Until: if the condition evaluates to true initially, the loop body is not executed at all, due to the condition being checked before the loop | For Loop: a programming language conditional iterative statement which is used to check for certain conditions and then repeatedly execute a block of code as long as those conditions are met. | While Loop: used to repeat a specific block of code an unknown number of times, until a condition is met. | List: a predefined list from which some statistical coded concepts take their values | Traversing Lists: visiting each node of the list once in order to perform some operation on that. | List Operations: The different operations you can perform on a list such as addition. | . # While Loop Money = 30 Burger = 0 while Money &gt;= 10: print(&#39;Here is your burger&#39;) Money = Money - 10 Burger = Burger + 1 print(&quot;You have&quot;, Burger, &quot;burgers&quot;) . Here is your burger Here is your burger Here is your burger You have 3 burgers . Food = [&#39;Carrot&#39;, &#39;Broccli&#39;, &#39;Apple&#39;] OverallCost = 0 for element in Food: print(OverallCost + 1) . 1 1 1 .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/.tri%202%20learning/2022/12/05/38~31.html",
            "relUrl": "/.tri%202%20learning/2022/12/05/38~31.html",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "3.3-3.4-  Mathematical Expressions/Strings",
            "content": "3.3/3.4 Mathematical Expressions/Strings . Notes . Algorithms are a finite set of instructions that accomplish a task. it has three parts, sequence, selection, and iteration | A sequence is the order of how to do something to achieve a result, similarly to how you follow the instructions from a teacher. | A selection allows an algorithm to make a decision based on if a condition is met, an example of this is when your car is out of fuel, you go to the gas station to fill your car, but if your car is full you wouldn&#39;t go to the gas station. | An iteration is a loop and doing something again until a condition is met, like you put away your computer when you are finished with your work. | Arithmetic uses addition, subtraction, division, multiplication, and modulus operator | Addition: a+b | Subtraction: a-b | Multiplication: a*b | Division: a/b | Modulus: a MOD b | (a and b can be string or number) | A string concatenation connects two or more string end-to-end to make a new string | Len() gives the character number | strings are variables and can be joined together through the print() command to make a statement | . Hacks . Hack 1 . Sequence | Sequence | Selection | Iteration/Selection | Sequence | The sequences are just the items and steps in order. The first set is to set item to a number and then get next number in the list. | The slection is number three and number 4 because it is making a decion based on and input and giving a different output depending on what the input was. | The iteration is 4 because it is redirecting the code also known as looping. | . Hack 2 . num1 = 5 num2 = num1 * 3 num3 = num2 / num1 * (9 % 2) * 4 result = (num3 % num1 + num2) % num3 * 3 / 5 . 5 X 3 = 15/5= 3 9/2 leaves remainder of 1 1 X 4 X 3 = 12 12 % 5 = 2 + 12 = 15 17 % 12 = 5 5 X 3= 15 15/5= 3 . Crossword . Iteration | Selection | Sequence | Hack 3 . . Friday Presentation Script . Algorithm: Algorithm is the overall flow of the code. It is the end tasks that is achived through sequence, selection, and iteration. | Sequence: A sequence is the order of the algoritm | Selection: A selection is a decesion the algorithm makes based on other conditions. | Iteration: Its a loop. It repeats a series of code until a certain condition is met. | Arithmetic: The math of code: addition, subtraction, multipication, and divsion | . age = 16 permit = True # The whole entire block of code is an Algorithm. The order of this code is a sequence #When they are under age they wait a year until they are over. # This is a while loop as well as an iteration. It loops back around when the condition isn&#39;t met while age &lt;= 15: age = age + 1 print(age) # These are conditionals and nested conditionals # This is a selction if age &gt;= 16: # Here is a boolean expression if permit == True: print(&quot;Here is your Drivers License&quot;) #if they don&#39;t have enough money they will say they are poor else: print(&quot;You have not completed your permit course&quot;) . Here is your Drivers License . numbers = 0 n = 1 while numbers &lt; 80: numbers = 3+(n-1)*13 n = n + 1 print(numbers) . 3 16 29 42 55 68 81 .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/.tri%202%20learning/2022/11/29/33~34.html",
            "relUrl": "/.tri%202%20learning/2022/11/29/33~34.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "3.1-3.2- Variables and Assignments/Data Abstraction",
            "content": "3.1-3.2- Variables and Assignments/Data Abstraction . Notes . A varaible is a abstraction made inside a program that holds a value | Make sure varaibles are correct | Boolean are true or false statements | Integers are numbers | Lists and dictionary are letters | A string can represent someones phone number | A varible is updated by making the varaible equal to something else in a new line | Sudo code is where syntax doesn&#39;t matter | Python the assignemnt oporator is = | Quotes means it is a string | Square brackets are a list | Javascript in this line of code we are trying to assign the buttons a variable | Strings are a series of characters | Lists are sequences of elements where each element in the list is a variable. An order to them | Using negative numbers you and start the list from the end | Data abstraction simplies code | Lists means that the user doesn&#39;t need to know the data | Printing a list of variables can be used with individual variables and the print() code. This is inefficient. You can use a single variable such as score = []. Then print it with print() | . Hacks . Hack 1 . An assignment operator is the transition character of a variable. = for python for example | Collegeboard pseudocode uses an arrow &lt; to assign values to variables | If a variable, x, is initially given a value of 15 and ;ater on changed to 22 it would display 22 because it was changed from 15. | . Hack 2 . A list is a series of varaibles that are listed then printed in one | An element is the characters isside a string | An easy way to reference elementing in a list or string is to use a print command but also list the number of that varable in the list. If it is the thrid item in the list you can put 2 or negative to if theres four items in the list | An example of a string is name = &quot;jake&quot; | . name = &quot;Jake&quot; favfood = [&quot;burger&quot;, &quot;steak&quot;, &quot;burrito&quot;] print(name, favfood) . Jake [&#39;burger&#39;, &#39;steak&#39;, &#39;burrito&#39;] . food = [&quot;burger&quot;, &quot;steak&quot;, &quot;burrito&quot;] print(food[2]) print(food[-1]) . burrito burrito . Hack 3 . num1=input(&quot;Input a number. &quot;) num2=input(&quot;Input a number. &quot;) num3=input(&quot;Input a number. &quot;) add=input(&quot;How much would you like to add? &quot;) # Add code in the space below numlist = [int(num1), int(num2), int(num3)] # The following is the code that adds the inputted addend to the other numbers. It is hidden from the user. for i in numlist: numlist[i -1] += int(add) print(numlist) . Hack 4 . Python Quiz . Complexity | Abstraction | [] | . food = [&quot;pizza&quot;, &quot;hot dog&quot;, &quot;sushi&quot;, &quot;strawberry&quot;, &quot;sandwich&quot;] print(food) . [&#39;pizza&#39;, &#39;hot dog&#39;, &#39;sushi&#39;, &#39;strawberry&#39;, &#39;sandwich&#39;] . Lists are better for a program than writing out the code because it makes the code more simple. It allows other programers to understand the code better and make edits easier. | . team1 = &quot;Bengals&quot; team2 = &quot;Saints&quot; team3 = &quot;Texans&quot; team4 = &quot;Cowboys&quot; print(team1, team2, team3, team4) . Bengals Saints Texans Cowboys . team = [&quot;Bengals&quot;, &quot;Saint&quot;, &quot;Texans&quot;, &quot;Cowboys&quot;] print(team) . [&#39;Bengals&#39;, &#39;Saint&#39;, &#39;Texans&#39;, &#39;Cowboys&#39;] . Vocab . Variable: a code which maps source symbols to a variable number of bits | Strings: a sequence of characters terminated with a null characte | Dictionary: unordered collection that contains key:value pairs separated by commas inside curly brackets | Lists: a sequence of several variables, grouped together under a single name | Data Types: a classification that specifies which type of value a variable has and what type of mathematical, relational or logical operations can be applied to it without causing an error. | Data Abstraction: the reduction of a particular body of data to a simplified representation of the whole | . x = 10 y = 11 . Students = { &#39;Names&#39;: [&#39;Jake&#39;,&#39;Brady&#39;, &#39;John&#39;], &#39;GPA&#39;: [4.00, 3.40, 1.8], &#39;Sports&#39;: [&#39;Foootball&#39;,&#39;Baseball&#39;, &#39;None&#39;], } print(Students[&#39;GPA&#39;][1]) print(Students[&#39;Names&#39;][2]) . 3.4 John . string1 = &quot;Hello&quot; string2 = &quot;World&quot; print(string1, string2) print(string2, string1) . Hello World World Hello .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/.tri%202%20learning/2022/11/28/31~32Notes.html",
            "relUrl": "/.tri%202%20learning/2022/11/28/31~32Notes.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Finaltri1",
            "content": "College Board Final . . I got question 26 wrong; “The variable isOpen is to be used to indicate whether or not a store is currently open. Which of the following is the most appropriate data type for isOpen?” The answered “number” when the real answer was Boolean. I was not 100% sure what Boolean meant. It means a value that is true or false. I put number because I thought I could use the values 1 and 0 to represent open and closed. It would have been more beneficial to use true to represent open and false to represent closed. | I got question 28 wrong; “The cost of a customer’s electricity bill is based on the number of units of electricity the customer uses. For the first 25 units of electricity, the cost is $5 per unit. For units of electricity after the first 25, the cost is $7 per unit.Which of the following code segments correctly sets the value of the variable cost to the cost, in dollars, of using numUnits units of electricity?” I answered “If numUnits &lt; 25 Cost &lt;– numUnits * 5. Else Cost &lt;– 25 * 7 + (numUnits - 25) * 5.” I should have switched the 5 and 7 on the else if statement. This is because the else if statement counts the first 25 units times 5 for 5 dollars per units. So it is 25 * 5. The units after cost 7 which is why it is times 7. | I got question 35 wrong; “In a certain video game, the variable maxPS represents the maximum possible score a player can earn. The maximum possible score depends on the time it takes the player to complete the game. The value of maxPS should be 30 if time is greater than 120 and 50 otherwise. Which of the following code segments correctly sets the value of maxPS based on the value of time ? Select two answers.” I answered D and A. Then correct answer was D and C. The reason C is wrong is because it is puting maxPS &lt;– 30 as an else if statement and maxPS &lt;– 50 as an if. This is incorrect because it is saying if time &gt; 120 then 50 would be correct when it should be 30. By excluding 50 from the if statement it means that it is only true if time &lt; 120. | I got question 46 wrong; “Consider the following code segment. What are the values of first and second as a result of executing the code segment?” I answered “The value of first is false, and the value of second is true.” The correct answer was “The value of first is false, and the value of second is true.” I beilive I misclicked on this question. The code segment says first &lt;– true and second &lt;– false. This practically gives me the answer because it is saying exactly what it does. | I got question 47 wrong; “Consider the following code segment. What is displayed as a result of executing the code segment?” I put 10, 20, 30, 40. I should have said 21, 40, 30, 50. I looked at what each value represented and I didn’t think about the equation very hard. I should have completed the math and done and algebra equation. A would be displayed as 21 because x=20 and it is X + 1. 20+1=21. B would be 40 because x is 20 and b was intially 20. This block of code changes it to 40 because 20 + 20 = 40. C is thirty because there are no further blcoks of code changing its value. D is 50 because it is 30 + 40/2. D is initially 40. 40/2=20. 20+30=50. | I got question 48 wrong; “Consider the following code segment.Which of the variables have the value 50 after executing the code segment?” I put x, y, and z when y is not correct. I saw that y=50 before the code segment but I didn’t think about after. It wouldn’t equal 50 because it changes its value. | I got question 49 wrong; “Consider the following procedures for string manipulation. Which of the following code segments can be used to store “noon” in the string variable word?” I put “word &lt;– “no” word &lt;– concat (reverse(word), reverse(word).” The correct answer is word &lt;– “on” word &lt;– concat(reverse(word), word).” The word would not be reversed twice in this segment. Also it assigns on to word instead of no to word. |",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/11/07/FinalTri1.html",
            "relUrl": "/2022/11/07/FinalTri1.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Finalprojectnotes",
            "content": "Night at the Museum . Computer Science . . Striver is a social media website that allows people to like posts that other users posted. On the website the user can make a post and talk about anything on it. It also has an inspirational quote generator that uses an API to fetch data on random quotes | Quinn Eliabeth was an online shopping website. Its frontend was amazing. You could pick pieces of clothing and add them to cart. It adds to your overall price. | Scheduler was a website that allowed you to add events to a calender. It also used an API to fetch weather data. You input a city and it gives you the weather of that city. | . Computer Animation . . Computer animation was a great experience. Stundets created a whole entire 3D virtual wrold. There was donuts, tables, and walls in the one I looked at. It looked as if a cartoon could have been developed from this. | . Ceramics . . I was in ceramics last year and I have it second trimester this year. It was a very fun class and this night reminded me of that. The stuents created great projects. | . Drawing and Painting . . Drawing and painting is not my strong suit. This is why I think it is so much more impressive what some of these studetns are able to accomplish. There were many different great drawings. There were realistics portraits as well as creative chaos. | . What I can do Better . Ideas . The Night at the Musuem taught me many things | Making a calender through fastpages | Using a large API to fetch data that only can be accessed through an input. The API from my project was just a table. It was very basic and I think I can make it more complex. | Quinn Elizibeth taught me that by adding up values of the prices of clothes you can make a final checkout price. I could use this in a different way such as a math system. Maybe a calculator. | Striver showed me that making a social media platform is possible. I could maybe use this as a system to make posts on another website. | . How to get a better grade . Throughout the trimester I thought I could get away with only getting 2.7s every week and end wiht an A. However when I did this it lowered my grade much more than I thought. It meant my grade heavily depended on the final. Now I am in a situation where I might get a B if I didn’t meet the critera of the poject. | I will also make sure to pay more attention in class. I wasn’t paying as much attention as I shoud have during lectures | I need to work harder in class so I don’t have to do my projects on the weekends. | I have to also read more on the scheldule so I can do assignments correctly. | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/11/03/FinalProjectNotes.html",
            "relUrl": "/2022/11/03/FinalProjectNotes.html",
            "date": " • Nov 3, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;jcmbea0fa2ff5msh7f14bf69be38ca6p175482jsn6c4988114560&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;message&#34;:&#34;You are not subscribed to this API.&#34;} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. . import requests url = &quot;https://spotify81.p.rapidapi.com/artist_singles&quot; querystring = {&quot;id&quot;:&quot;2w9zwq3AktTeYYMuhMjju8&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;4c8dd33eeemsh48b5d494c156df1p16ffebjsna986db2d8a91&quot;, &quot;X-RapidAPI-Host&quot;: &quot;spotify81.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.json()) . {&#39;data&#39;: {&#39;artist&#39;: {&#39;discography&#39;: {&#39;singles&#39;: {&#39;totalCount&#39;: 212, &#39;items&#39;: [{&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;70GSvRwILjynWHs5qAcDPY&#39;, &#39;uri&#39;: &#39;spotify:album:70GSvRwILjynWHs5qAcDPY&#39;, &#39;name&#39;: &#39;Wherever You Go (with Reynmen)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-08-26T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02e59b6b12320b639a72c0f360&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851e59b6b12320b639a72c0f360&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273e59b6b12320b639a72c0f360&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;xEgm5Y-tRxKu12DUvWy22A&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/70GSvRwILjynWHs5qAcDPY?si=xEgm5Y-tRxKu12DUvWy22A&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 2}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;33zJ4SIK5Tf8YXlYSsvelT&#39;, &#39;uri&#39;: &#39;spotify:album:33zJ4SIK5Tf8YXlYSsvelT&#39;, &#39;name&#39;: &#39;Wherever You Go&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-08-26T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02eefcba3ad842daa6f87a6896&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851eefcba3ad842daa6f87a6896&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273eefcba3ad842daa6f87a6896&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;4ZoxyDzfTP2E9q0K_kOoTg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/33zJ4SIK5Tf8YXlYSsvelT?si=4ZoxyDzfTP2E9q0K_kOoTg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;63oBgdhy76nv9I1LLhZQ3b&#39;, &#39;uri&#39;: &#39;spotify:album:63oBgdhy76nv9I1LLhZQ3b&#39;, &#39;name&#39;: &#39;Wherever You Go (Mert Hakan Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-08-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02259e22b2b451d91d2158dcc5&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851259e22b2b451d91d2158dcc5&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273259e22b2b451d91d2158dcc5&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;y1UpLRmoTbqfy50Qj-OTug&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/63oBgdhy76nv9I1LLhZQ3b?si=y1UpLRmoTbqfy50Qj-OTug&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7jeN8JERMZOCQfn0ETUnYY&#39;, &#39;uri&#39;: &#39;spotify:album:7jeN8JERMZOCQfn0ETUnYY&#39;, &#39;name&#39;: &#39;Magical Love (Maesic Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-06-18T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e022b961fe8d7fde37d76563247&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048512b961fe8d7fde37d76563247&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2732b961fe8d7fde37d76563247&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;cV7qkpBjST27qZTAoVo8qQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7jeN8JERMZOCQfn0ETUnYY?si=cV7qkpBjST27qZTAoVo8qQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 3}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3hqE43sWPNyUZZut3VNgMU&#39;, &#39;uri&#39;: &#39;spotify:album:3hqE43sWPNyUZZut3VNgMU&#39;, &#39;name&#39;: &#39;Magical Love&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-06-17T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02d8216408dc5ecb0be72e9730&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851d8216408dc5ecb0be72e9730&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273d8216408dc5ecb0be72e9730&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;ripDkUWBSjyxcqWv7gjj5A&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3hqE43sWPNyUZZut3VNgMU?si=ripDkUWBSjyxcqWv7gjj5A&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1UbFg8AzX8omvIxlQEMKUO&#39;, &#39;uri&#39;: &#39;spotify:album:1UbFg8AzX8omvIxlQEMKUO&#39;, &#39;name&#39;: &#39;Talk&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-06-03T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02dc487236aeef607d7b172d73&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851dc487236aeef607d7b172d73&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273dc487236aeef607d7b172d73&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;Wo_9XgdITP68zBoK9l-CSA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1UbFg8AzX8omvIxlQEMKUO?si=Wo_9XgdITP68zBoK9l-CSA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4rbCiSzxFxubcovAjLsdVv&#39;, &#39;uri&#39;: &#39;spotify:album:4rbCiSzxFxubcovAjLsdVv&#39;, &#39;name&#39;: &#39;Tare&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-04-05T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0255c99de91c07edf0092ebc4d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485155c99de91c07edf0092ebc4d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27355c99de91c07edf0092ebc4d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;qWrscdjjTkm51XfHMnghDQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4rbCiSzxFxubcovAjLsdVv?si=qWrscdjjTkm51XfHMnghDQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7DDqCPpZjHqLK3fuD1JaD6&#39;, &#39;uri&#39;: &#39;spotify:album:7DDqCPpZjHqLK3fuD1JaD6&#39;, &#39;name&#39;: &#39;Tare (Albwho Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-04-01T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02ef264c213f1f426953bf4a57&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851ef264c213f1f426953bf4a57&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273ef264c213f1f426953bf4a57&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;YHHDbElIT6CIhzihImVZLQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7DDqCPpZjHqLK3fuD1JaD6?si=YHHDbElIT6CIhzihImVZLQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;49suZMTVKKsLNX34EqQ7mc&#39;, &#39;uri&#39;: &#39;spotify:album:49suZMTVKKsLNX34EqQ7mc&#39;, &#39;name&#39;: &#39;Déjà Vu&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-03-25T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e026bc9d2d0e42cddd1c6977586&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048516bc9d2d0e42cddd1c6977586&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2736bc9d2d0e42cddd1c6977586&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;McRpYgKTTVS8qo3gWH4ePQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/49suZMTVKKsLNX34EqQ7mc?si=McRpYgKTTVS8qo3gWH4ePQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4MCOi8ZgIluCg50QR2iU1w&#39;, &#39;uri&#39;: &#39;spotify:album:4MCOi8ZgIluCg50QR2iU1w&#39;, &#39;name&#39;: &#39;UP (Kaluma Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-03-10T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e024b30c10e877142918872ad2f&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048514b30c10e877142918872ad2f&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2734b30c10e877142918872ad2f&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;YiL60alATLidyHqe6KwUYg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4MCOi8ZgIluCg50QR2iU1w?si=YiL60alATLidyHqe6KwUYg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4gUM4llwsErkQQ1VqBvE2D&#39;, &#39;uri&#39;: &#39;spotify:album:4gUM4llwsErkQQ1VqBvE2D&#39;, &#39;name&#39;: &#39;UP (Arem Ozguc &amp; Arman Aydin Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-02-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e022c9c3a51bea7bc70a92a5c94&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048512c9c3a51bea7bc70a92a5c94&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2732c9c3a51bea7bc70a92a5c94&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;B3hEuSi6QzCvL5sWBgB2hg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4gUM4llwsErkQQ1VqBvE2D?si=B3hEuSi6QzCvL5sWBgB2hg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;49D6ut4LdJCBD90wRWzfe6&#39;, &#39;uri&#39;: &#39;spotify:album:49D6ut4LdJCBD90wRWzfe6&#39;, &#39;name&#39;: &#39;Lalele&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-01-20T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e021f43d9d7588ec1c832b8f2dc&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048511f43d9d7588ec1c832b8f2dc&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2731f43d9d7588ec1c832b8f2dc&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;SiXFKqVASvqjUaPTgww1Og&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/49D6ut4LdJCBD90wRWzfe6?si=SiXFKqVASvqjUaPTgww1Og&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;2jA1exLaHCcpHtDrGLKTmy&#39;, &#39;uri&#39;: &#39;spotify:album:2jA1exLaHCcpHtDrGLKTmy&#39;, &#39;name&#39;: &#39;UP&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-12-17T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e027bd254131ac1f8678448d076&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048517bd254131ac1f8678448d076&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2737bd254131ac1f8678448d076&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;SRSkRodtRjC_G9rb_V3wAA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/2jA1exLaHCcpHtDrGLKTmy?si=SRSkRodtRjC_G9rb_V3wAA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6uvP8hlbI9X3RleKNVmBzT&#39;, &#39;uri&#39;: &#39;spotify:album:6uvP8hlbI9X3RleKNVmBzT&#39;, &#39;name&#39;: &#39;UP (Robert Cristian Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-12-03T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e021271f5f16702f3516f86579d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048511271f5f16702f3516f86579d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2731271f5f16702f3516f86579d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;W0dURYhvT22sPLT9xU8W6w&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6uvP8hlbI9X3RleKNVmBzT?si=W0dURYhvT22sPLT9xU8W6w&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5kjggiiZEcRzFvQ4rowAsQ&#39;, &#39;uri&#39;: &#39;spotify:album:5kjggiiZEcRzFvQ4rowAsQ&#39;, &#39;name&#39;: &#39;De Dragul Tău&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-11-26T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02da7c4e91509943b3c7cf8ef4&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851da7c4e91509943b3c7cf8ef4&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273da7c4e91509943b3c7cf8ef4&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;nt4LBx6iS1apv0eTku5qfA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5kjggiiZEcRzFvQ4rowAsQ?si=nt4LBx6iS1apv0eTku5qfA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;21x0bCve7UJ7ZAapjt8GFz&#39;, &#39;uri&#39;: &#39;spotify:album:21x0bCve7UJ7ZAapjt8GFz&#39;, &#39;name&#39;: &#39;UP&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-29T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0265f27da14d572556a8a59755&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485165f27da14d572556a8a59755&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27365f27da14d572556a8a59755&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;Je_kaaa2RwShrTjTq8ebYw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/21x0bCve7UJ7ZAapjt8GFz?si=Je_kaaa2RwShrTjTq8ebYw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3wBRVC1SMfIEdsr9thFSYJ&#39;, &#39;uri&#39;: &#39;spotify:album:3wBRVC1SMfIEdsr9thFSYJ&#39;, &#39;name&#39;: &#39;UP (Vadim Adamov &amp; Hardphol Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0200296e006391b562e8c70563&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485100296e006391b562e8c70563&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27300296e006391b562e8c70563&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;NPwHfm1iTdefdWJm-au6Rg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3wBRVC1SMfIEdsr9thFSYJ?si=NPwHfm1iTdefdWJm-au6Rg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;605jn7Lsj6RD4ovYCsnrxe&#39;, &#39;uri&#39;: &#39;spotify:album:605jn7Lsj6RD4ovYCsnrxe&#39;, &#39;name&#39;: &#39;UP (Mert Hakan &amp; Onur Betin Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e023a3334b5c3ac49b938312f03&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048513a3334b5c3ac49b938312f03&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2733a3334b5c3ac49b938312f03&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;YPTOyQmFTTWKLa_chgz4RA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/605jn7Lsj6RD4ovYCsnrxe?si=YPTOyQmFTTWKLa_chgz4RA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3QJqG1fLaNGsgjVUroIPCT&#39;, &#39;uri&#39;: &#39;spotify:album:3QJqG1fLaNGsgjVUroIPCT&#39;, &#39;name&#39;: &#39;UP (Filatov &amp; Karas Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02d73086d4cbe065734d124185&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851d73086d4cbe065734d124185&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273d73086d4cbe065734d124185&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;WKeWmTh9T9aHUgmR-TAGXQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3QJqG1fLaNGsgjVUroIPCT?si=WKeWmTh9T9aHUgmR-TAGXQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;57NJ9mlC0mPtXJAc6T9Q2g&#39;, &#39;uri&#39;: &#39;spotify:album:57NJ9mlC0mPtXJAc6T9Q2g&#39;, &#39;name&#39;: &#39;UP (Bzars Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0237f1c2da634da62a84370a09&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485137f1c2da634da62a84370a09&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27337f1c2da634da62a84370a09&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;N-OjOytoThip6lhXrk-mqQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/57NJ9mlC0mPtXJAc6T9Q2g?si=N-OjOytoThip6lhXrk-mqQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;53kblUkYfsJ5bYAb3yDO0s&#39;, &#39;uri&#39;: &#39;spotify:album:53kblUkYfsJ5bYAb3yDO0s&#39;, &#39;name&#39;: &#39;UP (Barlas &amp; Mert Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e022af676a3bccbfe4a9cf0408d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048512af676a3bccbfe4a9cf0408d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2732af676a3bccbfe4a9cf0408d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;Pbvj7KBzQRargoRra56xgA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/53kblUkYfsJ5bYAb3yDO0s?si=Pbvj7KBzQRargoRra56xgA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7uAgbC70TWlSaIs8SzmDwU&#39;, &#39;uri&#39;: &#39;spotify:album:7uAgbC70TWlSaIs8SzmDwU&#39;, &#39;name&#39;: &#39;UP&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02a20f608f337d3e30f5a2e665&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851a20f608f337d3e30f5a2e665&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273a20f608f337d3e30f5a2e665&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;RujKvwdnQESxfIZKRFNgAA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7uAgbC70TWlSaIs8SzmDwU?si=RujKvwdnQESxfIZKRFNgAA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;46s4mpLHOEpUAcejvR7IpA&#39;, &#39;uri&#39;: &#39;spotify:album:46s4mpLHOEpUAcejvR7IpA&#39;, &#39;name&#39;: &#39;UP (Casian Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-25T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e027286abd5a5eeb280ab512719&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048517286abd5a5eeb280ab512719&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2737286abd5a5eeb280ab512719&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;9fFZ9INSTduW37pAd04KuA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/46s4mpLHOEpUAcejvR7IpA?si=9fFZ9INSTduW37pAd04KuA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;75732AF41SF4yp6Nrtjgdx&#39;, &#39;uri&#39;: &#39;spotify:album:75732AF41SF4yp6Nrtjgdx&#39;, &#39;name&#39;: &#39;UP (Serdar Kirgiz Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-22T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02bade8800558bb58adb1d8b5f&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851bade8800558bb58adb1d8b5f&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273bade8800558bb58adb1d8b5f&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;y1V6NmnjR0Cqg9Awd0ubMw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/75732AF41SF4yp6Nrtjgdx?si=y1V6NmnjR0Cqg9Awd0ubMw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;68t5XuKtgGbDZAr0SYylJg&#39;, &#39;uri&#39;: &#39;spotify:album:68t5XuKtgGbDZAr0SYylJg&#39;, &#39;name&#39;: &#39;Like That&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-09-30T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e026254d49df8517a5b5cab9505&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048516254d49df8517a5b5cab9505&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2736254d49df8517a5b5cab9505&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;bW_WW8jfQTak919JXftoiw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/68t5XuKtgGbDZAr0SYylJg?si=bW_WW8jfQTak919JXftoiw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5JNDuFuvWhwnLPxpP2Cfzv&#39;, &#39;uri&#39;: &#39;spotify:album:5JNDuFuvWhwnLPxpP2Cfzv&#39;, &#39;name&#39;: &#39;Pretty Please&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-09-24T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02eaa5e68d857694e4ddb0c596&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851eaa5e68d857694e4ddb0c596&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273eaa5e68d857694e4ddb0c596&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;tHzO29D_SXax38dYbPw5Xw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5JNDuFuvWhwnLPxpP2Cfzv?si=tHzO29D_SXax38dYbPw5Xw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1HJj1jSYQlHcIeeOgJVjx0&#39;, &#39;uri&#39;: &#39;spotify:album:1HJj1jSYQlHcIeeOgJVjx0&#39;, &#39;name&#39;: &#39;Party&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-09-22T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02ba6a65a07d32d3e214af76cc&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851ba6a65a07d32d3e214af76cc&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273ba6a65a07d32d3e214af76cc&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;NCFUOrYBT66Leohpg-1GVA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1HJj1jSYQlHcIeeOgJVjx0?si=NCFUOrYBT66Leohpg-1GVA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1kAnhTZUVAXIgmspTcSxqj&#39;, &#39;uri&#39;: &#39;spotify:album:1kAnhTZUVAXIgmspTcSxqj&#39;, &#39;name&#39;: &#39;Aici&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-08-13T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02ef6451a062a530d3d2fbf778&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851ef6451a062a530d3d2fbf778&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273ef6451a062a530d3d2fbf778&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;IWqQE5crRjyUN46sbJE9bA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1kAnhTZUVAXIgmspTcSxqj?si=IWqQE5crRjyUN46sbJE9bA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;0fprmuiWAU7cCx64jG58HI&#39;, &#39;uri&#39;: &#39;spotify:album:0fprmuiWAU7cCx64jG58HI&#39;, &#39;name&#39;: &#39;Papa&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-07-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e024cf5144feb940b6e5ddcf24f&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048514cf5144feb940b6e5ddcf24f&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2734cf5144feb940b6e5ddcf24f&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;pdefFNqKTyiQ1gOdLjDCoQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/0fprmuiWAU7cCx64jG58HI?si=pdefFNqKTyiQ1gOdLjDCoQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;0kCQJStitU54MYB12k7HZU&#39;, &#39;uri&#39;: &#39;spotify:album:0kCQJStitU54MYB12k7HZU&#39;, &#39;name&#39;: &#39;Hot (Sound Rush Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-07-13T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e021ba87102ad18c0e87ef56ff8&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048511ba87102ad18c0e87ef56ff8&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2731ba87102ad18c0e87ef56ff8&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;JY0lvDGmQ7-n3xS9nBymLQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/0kCQJStitU54MYB12k7HZU?si=JY0lvDGmQ7-n3xS9nBymLQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 2}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5jkQzh571W8YXJ7phsjg8X&#39;, &#39;uri&#39;: &#39;spotify:album:5jkQzh571W8YXJ7phsjg8X&#39;, &#39;name&#39;: &#34;Summer&#39;s Not Ready (feat. INNA and Timmy Trumpet)&#34;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-06-29T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e028cccca21719135292b3c67a3&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048518cccca21719135292b3c67a3&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2738cccca21719135292b3c67a3&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;ZSghGJhQQ26dlkbNaYtOeQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5jkQzh571W8YXJ7phsjg8X?si=ZSghGJhQQ26dlkbNaYtOeQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4z8dKsFCqFSUblEvwyIMh6&#39;, &#39;uri&#39;: &#39;spotify:album:4z8dKsFCqFSUblEvwyIMh6&#39;, &#39;name&#39;: &#39;Paris to London&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-06-25T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0202bbe85b5146f9f18501697c&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485102bbe85b5146f9f18501697c&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27302bbe85b5146f9f18501697c&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;0Ho3cwI3T8ChRvDsQkC2fw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4z8dKsFCqFSUblEvwyIMh6?si=0Ho3cwI3T8ChRvDsQkC2fw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1Dn758WZneVZvqazEK18Zs&#39;, &#39;uri&#39;: &#39;spotify:album:1Dn758WZneVZvqazEK18Zs&#39;, &#39;name&#39;: &#39;Maza&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-06-11T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e027e2fae88294459e096acaf97&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048517e2fae88294459e096acaf97&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2737e2fae88294459e096acaf97&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;tGNO1mWzTTuSYAd0tKLDpg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1Dn758WZneVZvqazEK18Zs?si=tGNO1mWzTTuSYAd0tKLDpg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6WYUXLCkqa2HT8Ble2RPnl&#39;, &#39;uri&#39;: &#39;spotify:album:6WYUXLCkqa2HT8Ble2RPnl&#39;, &#39;name&#39;: &#39;Maza (Robert Cristian Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-06-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02a8a03cf25e11aa040ff38dbb&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851a8a03cf25e11aa040ff38dbb&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273a8a03cf25e11aa040ff38dbb&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;Z3pBzhWrTFWCELVQo2dEeA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6WYUXLCkqa2HT8Ble2RPnl?si=Z3pBzhWrTFWCELVQo2dEeA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3URxAZFfZ4rLYMb0goZJNu&#39;, &#39;uri&#39;: &#39;spotify:album:3URxAZFfZ4rLYMb0goZJNu&#39;, &#39;name&#39;: &#39;Maza (French Version)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-06-01T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02176fc17fff8a6b468e869eb8&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851176fc17fff8a6b468e869eb8&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273176fc17fff8a6b468e869eb8&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;VRxCCzhyTV6FgfVbTbZ1EQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3URxAZFfZ4rLYMb0goZJNu?si=VRxCCzhyTV6FgfVbTbZ1EQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;56IMULK7a9IkAkgQE9sNrg&#39;, &#39;uri&#39;: &#39;spotify:album:56IMULK7a9IkAkgQE9sNrg&#39;, &#39;name&#39;: &#39;Maza (US Version)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-05-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e022861cc9d95544297e9ded4a9&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048512861cc9d95544297e9ded4a9&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2732861cc9d95544297e9ded4a9&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;qhJro7NdQ_6D6kDaIJSlLA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/56IMULK7a9IkAkgQE9sNrg?si=qhJro7NdQ_6D6kDaIJSlLA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 3}}, {&#39;id&#39;: &#39;4p7iyW0drxwDXiMOWdLac8&#39;, &#39;uri&#39;: &#39;spotify:album:4p7iyW0drxwDXiMOWdLac8&#39;, &#39;name&#39;: &#39;Maza (US Version)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-06-02T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02c8549cd6223d23367e720e36&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851c8549cd6223d23367e720e36&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273c8549cd6223d23367e720e36&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;gMEgI8jGRzCEMsV_H5j1aA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4p7iyW0drxwDXiMOWdLac8?si=gMEgI8jGRzCEMsV_H5j1aA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7dmob5pZ4DyfhIPdOW2aWG&#39;, &#39;uri&#39;: &#39;spotify:album:7dmob5pZ4DyfhIPdOW2aWG&#39;, &#39;name&#39;: &#39;Maza (Ilkan Günüç Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-05-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0204514813b862e550444e930d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485104514813b862e550444e930d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27304514813b862e550444e930d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;sOOGgmYaTI2IKf7aGDXGjw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7dmob5pZ4DyfhIPdOW2aWG?si=sOOGgmYaTI2IKf7aGDXGjw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4hCmUF3sTmagOYzrRrVCHj&#39;, &#39;uri&#39;: &#39;spotify:album:4hCmUF3sTmagOYzrRrVCHj&#39;, &#39;name&#39;: &#39;Maza (Casian Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-05-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e028fe33d92ca0fefd23bafbe16&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048518fe33d92ca0fefd23bafbe16&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2738fe33d92ca0fefd23bafbe16&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;A-LtPlqiQzSaUIpgxdCSsg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4hCmUF3sTmagOYzrRrVCHj?si=A-LtPlqiQzSaUIpgxdCSsg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5w5UPTvxo2vjCWnP5fbEnc&#39;, &#39;uri&#39;: &#39;spotify:album:5w5UPTvxo2vjCWnP5fbEnc&#39;, &#39;name&#39;: &#39;It Don’t Matter - Spotify Singles&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-05-07T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0260b16fc0b0cc5948f2173511&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485160b16fc0b0cc5948f2173511&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27360b16fc0b0cc5948f2173511&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;bx62UF4zQYufWgO5Xt1q1Q&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5w5UPTvxo2vjCWnP5fbEnc?si=bx62UF4zQYufWgO5Xt1q1Q&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6cHNuGBDX0h3Pf88quyymV&#39;, &#39;uri&#39;: &#39;spotify:album:6cHNuGBDX0h3Pf88quyymV&#39;, &#39;name&#39;: &#39;It Don’t Matter (Ekanta Jake Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-05-06T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02264573ea95bea5bb05dad9f4&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851264573ea95bea5bb05dad9f4&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273264573ea95bea5bb05dad9f4&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;AmLt4w7bQqOTAZYihMftQA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6cHNuGBDX0h3Pf88quyymV?si=AmLt4w7bQqOTAZYihMftQA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1ieuMbqWl9HW9PUuMLchfi&#39;, &#39;uri&#39;: &#39;spotify:album:1ieuMbqWl9HW9PUuMLchfi&#39;, &#39;name&#39;: &#39;Oh My God&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-04-29T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e025320b79cf9b66a3831d31b4d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048515320b79cf9b66a3831d31b4d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2735320b79cf9b66a3831d31b4d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;FHEebFjNR8CIeq6IEnZ2xw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1ieuMbqWl9HW9PUuMLchfi?si=FHEebFjNR8CIeq6IEnZ2xw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1uEwqEReGhPtpvSiScNnne&#39;, &#39;uri&#39;: &#39;spotify:album:1uEwqEReGhPtpvSiScNnne&#39;, &#39;name&#39;: &#39;Oh My God (Modern Clvb Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-04-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02e5c211f9b7f3142b1bcea6a7&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851e5c211f9b7f3142b1bcea6a7&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273e5c211f9b7f3142b1bcea6a7&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;aqdPgUplTryfk8aARxUF8Q&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1uEwqEReGhPtpvSiScNnne?si=aqdPgUplTryfk8aARxUF8Q&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3ZNhk2Hi8XrJqopTvccNxu&#39;, &#39;uri&#39;: &#39;spotify:album:3ZNhk2Hi8XrJqopTvccNxu&#39;, &#39;name&#39;: &#39;Oh My God (Malik Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-04-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02059d7816e0b9ccf7e52f0286&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851059d7816e0b9ccf7e52f0286&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273059d7816e0b9ccf7e52f0286&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;rCWF-O78RFS8u8kjnbJ9Xg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3ZNhk2Hi8XrJqopTvccNxu?si=rCWF-O78RFS8u8kjnbJ9Xg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6R0m2DwJEdJhr7SD0DnF2M&#39;, &#39;uri&#39;: &#39;spotify:album:6R0m2DwJEdJhr7SD0DnF2M&#39;, &#39;name&#39;: &#39;Oh My God (Kean Dysso Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-04-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e021bb377640e905ced6108159d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048511bb377640e905ced6108159d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2731bb377640e905ced6108159d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;SEh3hGuMSlKT7GEYSBQ8tA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6R0m2DwJEdJhr7SD0DnF2M?si=SEh3hGuMSlKT7GEYSBQ8tA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4OCtCoDnUhXDRLejqZ1nIG&#39;, &#39;uri&#39;: &#39;spotify:album:4OCtCoDnUhXDRLejqZ1nIG&#39;, &#39;name&#39;: &#39;Oh My God (DJ Tuncay Albayrak Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-04-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e022c0820ca8a24c4fecf5f626c&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048512c0820ca8a24c4fecf5f626c&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2732c0820ca8a24c4fecf5f626c&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;ZNt6AGgyRkOvr7lANhvgKw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4OCtCoDnUhXDRLejqZ1nIG?si=ZNt6AGgyRkOvr7lANhvgKw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3Ah4WxYwvaCtjYi5mBOGIT&#39;, &#39;uri&#39;: &#39;spotify:album:3Ah4WxYwvaCtjYi5mBOGIT&#39;, &#39;name&#39;: &#39;Oh My God (Cosmo &amp; Skoro Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-04-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02dd4a2ad63d89e8082ca6c4f2&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851dd4a2ad63d89e8082ca6c4f2&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273dd4a2ad63d89e8082ca6c4f2&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;R2-w-K36RC-aYongbWixOQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3Ah4WxYwvaCtjYi5mBOGIT?si=R2-w-K36RC-aYongbWixOQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7ygx7VMBScPeuQ7Zro3FKZ&#39;, &#39;uri&#39;: &#39;spotify:album:7ygx7VMBScPeuQ7Zro3FKZ&#39;, &#39;name&#39;: &#39;Cool Me Down&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-04-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e028cb894fb74049c50127813a9&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048518cb894fb74049c50127813a9&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2738cb894fb74049c50127813a9&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;bWB3cVKNTU6kC5cOaZMcqA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7ygx7VMBScPeuQ7Zro3FKZ?si=bWB3cVKNTU6kC5cOaZMcqA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 2}}, {&#39;id&#39;: &#39;1JmUG07HKI0ZOgyaUDYWXl&#39;, &#39;uri&#39;: &#39;spotify:album:1JmUG07HKI0ZOgyaUDYWXl&#39;, &#39;name&#39;: &#39;Cool Me Down&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-04-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02bcd63886aa45a6e167f4f5c6&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851bcd63886aa45a6e167f4f5c6&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273bcd63886aa45a6e167f4f5c6&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;0FdsziUoSw6w4adCzDggWQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1JmUG07HKI0ZOgyaUDYWXl?si=0FdsziUoSw6w4adCzDggWQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5oPp0EN7cEF9CqkWSgaXgy&#39;, &#39;uri&#39;: &#39;spotify:album:5oPp0EN7cEF9CqkWSgaXgy&#39;, &#39;name&#39;: &#39;You and I&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-12-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e024f6a1d2c259a78f5420fbc91&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048514f6a1d2c259a78f5420fbc91&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2734f6a1d2c259a78f5420fbc91&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;sgI4dPJYSsiYEdjhT2cgYw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5oPp0EN7cEF9CqkWSgaXgy?si=sgI4dPJYSsiYEdjhT2cgYw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1jX4SAgxVO4iQPfkbLIAQ4&#39;, &#39;uri&#39;: &#39;spotify:album:1jX4SAgxVO4iQPfkbLIAQ4&#39;, &#39;name&#39;: &#39;Till Forever&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-12-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0262d99820075a1a12dcd27b56&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485162d99820075a1a12dcd27b56&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27362d99820075a1a12dcd27b56&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;zTNgTbXrQSOP8SuiSRvV1A&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1jX4SAgxVO4iQPfkbLIAQ4?si=zTNgTbXrQSOP8SuiSRvV1A&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5WdPNBvuCXVPxCIZe1Y6Al&#39;, &#39;uri&#39;: &#39;spotify:album:5WdPNBvuCXVPxCIZe1Y6Al&#39;, &#39;name&#39;: &#39;Thicky&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-12-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0212718cfb8419859a5784cd6e&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485112718cfb8419859a5784cd6e&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27312718cfb8419859a5784cd6e&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;uyfcexLmTRqz2BBxppi3vw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5WdPNBvuCXVPxCIZe1Y6Al?si=uyfcexLmTRqz2BBxppi3vw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3KGzVyVMyXW4kICozPsIoT&#39;, &#39;uri&#39;: &#39;spotify:album:3KGzVyVMyXW4kICozPsIoT&#39;, &#39;name&#39;: &#39;Sunset Dinner&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-12-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0287bf6955d7e8e9dee358ff5c&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485187bf6955d7e8e9dee358ff5c&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27387bf6955d7e8e9dee358ff5c&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;LN1ftVS_RtWJrpweO262QQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3KGzVyVMyXW4kICozPsIoT?si=LN1ftVS_RtWJrpweO262QQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;43uvYG2S8XEZz88nHYduIm&#39;, &#39;uri&#39;: &#39;spotify:album:43uvYG2S8XEZz88nHYduIm&#39;, &#39;name&#39;: &#39;One Reason&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-12-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0230a6633acf3934de8eac28c2&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485130a6633acf3934de8eac28c2&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27330a6633acf3934de8eac28c2&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;iNDBFOunQEOnVVOvw2nDsg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/43uvYG2S8XEZz88nHYduIm?si=iNDBFOunQEOnVVOvw2nDsg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7JSIWQseOBW63TOHaSgUlG&#39;, &#39;uri&#39;: &#39;spotify:album:7JSIWQseOBW63TOHaSgUlG&#39;, &#39;name&#39;: &#39;Maza Jaja&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-12-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e022fb02b68ded90c2a6ca543a6&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048512fb02b68ded90c2a6ca543a6&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2732fb02b68ded90c2a6ca543a6&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;RlnPnLalScakeIlizLY7Ng&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7JSIWQseOBW63TOHaSgUlG?si=RlnPnLalScakeIlizLY7Ng&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6Z2qcCOpbbuYlRQ9l41f44&#39;, &#39;uri&#39;: &#39;spotify:album:6Z2qcCOpbbuYlRQ9l41f44&#39;, &#39;name&#39;: &#39;Heartbreaker&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-12-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02680249bd3c8b35e6e499c875&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851680249bd3c8b35e6e499c875&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273680249bd3c8b35e6e499c875&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;Lr6RmnnVQp677ajtclZJ-g&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6Z2qcCOpbbuYlRQ9l41f44?si=Lr6RmnnVQp677ajtclZJ-g&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7d5H1Jur1Wn816sI8slGtr&#39;, &#39;uri&#39;: &#39;spotify:album:7d5H1Jur1Wn816sI8slGtr&#39;, &#39;name&#39;: &#39;Gucci Balenciaga&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-12-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e028b8c56db5cd97ab983558ed9&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048518b8c56db5cd97ab983558ed9&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2738b8c56db5cd97ab983558ed9&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;xYP46YWWRpaV_YExB0ppcA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7d5H1Jur1Wn816sI8slGtr?si=xYP46YWWRpaV_YExB0ppcA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4obDodNku3yyLLZNHkl3c5&#39;, &#39;uri&#39;: &#39;spotify:album:4obDodNku3yyLLZNHkl3c5&#39;, &#39;name&#39;: &#39;Flashbacks&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-12-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02e510e84a79bb58b33495dac5&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851e510e84a79bb58b33495dac5&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273e510e84a79bb58b33495dac5&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;IOL19bmqRmeEpQw4tHSmAA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4obDodNku3yyLLZNHkl3c5?si=IOL19bmqRmeEpQw4tHSmAA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;61u4QTomAEmsUDZ9k1gj0M&#39;, &#39;uri&#39;: &#39;spotify:album:61u4QTomAEmsUDZ9k1gj0M&#39;, &#39;name&#39;: &#39;Beautiful Lie&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-12-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0271ef4d9db9f7bf56cdcfc35e&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485171ef4d9db9f7bf56cdcfc35e&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27371ef4d9db9f7bf56cdcfc35e&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;9GULx1VgTF-Th-Go54x8nw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/61u4QTomAEmsUDZ9k1gj0M?si=9GULx1VgTF-Th-Go54x8nw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5HQTa6FgnuL2b6ePYieay5&#39;, &#39;uri&#39;: &#39;spotify:album:5HQTa6FgnuL2b6ePYieay5&#39;, &#39;name&#39;: &#39;One Reason (Ferki Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02db0da98593acf906da54422a&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851db0da98593acf906da54422a&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273db0da98593acf906da54422a&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;qA3rLFgVRru9JYzxn1sXGg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5HQTa6FgnuL2b6ePYieay5?si=qA3rLFgVRru9JYzxn1sXGg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;456OCazIPHxeLG7p830H1U&#39;, &#39;uri&#39;: &#39;spotify:album:456OCazIPHxeLG7p830H1U&#39;, &#39;name&#39;: &#39;Flashbacks (Yalçın Aşan Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02afa2abf1cf77e05a65c4bffe&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851afa2abf1cf77e05a65c4bffe&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273afa2abf1cf77e05a65c4bffe&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;bPeGKEqjRDeDEx8ypMydsw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/456OCazIPHxeLG7p830H1U?si=bPeGKEqjRDeDEx8ypMydsw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;0lTcqJDMYmahGCOhDYD0Ic&#39;, &#39;uri&#39;: &#39;spotify:album:0lTcqJDMYmahGCOhDYD0Ic&#39;, &#39;name&#39;: &#39;Flashbacks (Syde X Nvrmind Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e025e895e07ecc011e8c771e8ac&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048515e895e07ecc011e8c771e8ac&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2735e895e07ecc011e8c771e8ac&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;UifZMH4wTy2KtUlfmruvBw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/0lTcqJDMYmahGCOhDYD0Ic?si=UifZMH4wTy2KtUlfmruvBw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;2Oi38eim2ClvkYETmrw1UK&#39;, &#39;uri&#39;: &#39;spotify:album:2Oi38eim2ClvkYETmrw1UK&#39;, &#39;name&#39;: &#39;Flashbacks (Suark Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e023a306fff81e2db65dc0dd13d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048513a306fff81e2db65dc0dd13d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2733a306fff81e2db65dc0dd13d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;alA_tl9YQVq_xqJiviRkNA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/2Oi38eim2ClvkYETmrw1UK?si=alA_tl9YQVq_xqJiviRkNA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;35VBwoXCW7czQFrpCTplU0&#39;, &#39;uri&#39;: &#39;spotify:album:35VBwoXCW7czQFrpCTplU0&#39;, &#39;name&#39;: &#39;Flashbacks (Robert Cristian Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0248b8c1aba98a239d0caf760b&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485148b8c1aba98a239d0caf760b&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27348b8c1aba98a239d0caf760b&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;08EVFib6S0mcPHycfERjSw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/35VBwoXCW7czQFrpCTplU0?si=08EVFib6S0mcPHycfERjSw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6MN3PW9nrqkxjR5zTIJJlt&#39;, &#39;uri&#39;: &#39;spotify:album:6MN3PW9nrqkxjR5zTIJJlt&#39;, &#39;name&#39;: &#39;Flashbacks (Nomad Digital Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0241ec20fba0ae19061993c21b&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485141ec20fba0ae19061993c21b&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27341ec20fba0ae19061993c21b&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;OtIzVca0QOewvvNi9p_VdQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6MN3PW9nrqkxjR5zTIJJlt?si=OtIzVca0QOewvvNi9p_VdQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;12ViO6e8nFT39NW7Wegscd&#39;, &#39;uri&#39;: &#39;spotify:album:12ViO6e8nFT39NW7Wegscd&#39;, &#39;name&#39;: &#39;Flashbacks (Maesic Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02a0cfba35d3e360195a6609e5&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851a0cfba35d3e360195a6609e5&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273a0cfba35d3e360195a6609e5&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;PQ5ikUwVQkmaNxrsvNG1VQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/12ViO6e8nFT39NW7Wegscd?si=PQ5ikUwVQkmaNxrsvNG1VQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5si0w0w3ajLKhYPVvRYyID&#39;, &#39;uri&#39;: &#39;spotify:album:5si0w0w3ajLKhYPVvRYyID&#39;, &#39;name&#39;: &#39;Flashbacks (GLDN, FIVE &amp; LAST 60” Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02783c555717721e3b678b226d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851783c555717721e3b678b226d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273783c555717721e3b678b226d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;_RlylqMlQhKh3ziS_e8qiQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5si0w0w3ajLKhYPVvRYyID?si=_RlylqMlQhKh3ziS_e8qiQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4tZKzfdb4d37iyhsviyI7e&#39;, &#39;uri&#39;: &#39;spotify:album:4tZKzfdb4d37iyhsviyI7e&#39;, &#39;name&#39;: &#39;Flashbacks (Dj Dark &amp; Mentol Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0260db5f1b39044aea05247c93&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485160db5f1b39044aea05247c93&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27360db5f1b39044aea05247c93&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;ohPJzp8STHS02AvV5Hs_HA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4tZKzfdb4d37iyhsviyI7e?si=ohPJzp8STHS02AvV5Hs_HA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;13RkwNWWU8WvJ8UiuSjSie&#39;, &#39;uri&#39;: &#39;spotify:album:13RkwNWWU8WvJ8UiuSjSie&#39;, &#39;name&#39;: &#39;Flashbacks (Danny Burg Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0245a4b1d76c7781ea8ef7a4ef&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485145a4b1d76c7781ea8ef7a4ef&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27345a4b1d76c7781ea8ef7a4ef&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;5xVs6wV4TcuOFuR8EeSS5g&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/13RkwNWWU8WvJ8UiuSjSie?si=5xVs6wV4TcuOFuR8EeSS5g&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1m82TC7XrBx9Uq5FhMQS1Q&#39;, &#39;uri&#39;: &#39;spotify:album:1m82TC7XrBx9Uq5FhMQS1Q&#39;, &#39;name&#39;: &#39;Flashbacks (DJ Tuncay Albayrak Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e026e32336ef5ab966505e3cf74&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048516e32336ef5ab966505e3cf74&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2736e32336ef5ab966505e3cf74&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;o032LpHXT462lsyIwfo4qQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1m82TC7XrBx9Uq5FhMQS1Q?si=o032LpHXT462lsyIwfo4qQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7uGqnhE91VHClteaLXtXBL&#39;, &#39;uri&#39;: &#39;spotify:album:7uGqnhE91VHClteaLXtXBL&#39;, &#39;name&#39;: &#39;Flashbacks (DFM Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e025a2ac4f79fde88fbb424b5a2&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048515a2ac4f79fde88fbb424b5a2&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2735a2ac4f79fde88fbb424b5a2&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;MSgDwk90TbSx-tiJe4LG8g&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7uGqnhE91VHClteaLXtXBL?si=MSgDwk90TbSx-tiJe4LG8g&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1tywrphXZrnsZhg7w1fKKr&#39;, &#39;uri&#39;: &#39;spotify:album:1tywrphXZrnsZhg7w1fKKr&#39;, &#39;name&#39;: &#39;Flashbacks (Asher Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02994cd9074c1f2feda6a6a8d1&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851994cd9074c1f2feda6a6a8d1&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273994cd9074c1f2feda6a6a8d1&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;P-3GlTbTQFejSOQdg8h1Iw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1tywrphXZrnsZhg7w1fKKr?si=P-3GlTbTQFejSOQdg8h1Iw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3axozf8VicioAeHwtZphDl&#39;, &#39;uri&#39;: &#39;spotify:album:3axozf8VicioAeHwtZphDl&#39;, &#39;name&#39;: &#39;Call Me Now (Club Mixes)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-27T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e028db8c594e89a442eedd0d4f4&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048518db8c594e89a442eedd0d4f4&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2738db8c594e89a442eedd0d4f4&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;vUTn-uo6QSS7RCkh1tmVDg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3axozf8VicioAeHwtZphDl?si=vUTn-uo6QSS7RCkh1tmVDg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 3}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;0eUWQjiE7vMv4ulgUBkOky&#39;, &#39;uri&#39;: &#39;spotify:album:0eUWQjiE7vMv4ulgUBkOky&#39;, &#39;name&#39;: &#39;Maza (Adrian Funk X OLiX Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-20T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02b6e687fda1852e3305d36a20&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851b6e687fda1852e3305d36a20&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273b6e687fda1852e3305d36a20&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;gCPlXnqhRoGEgwbVhhK7Vg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/0eUWQjiE7vMv4ulgUBkOky?si=gCPlXnqhRoGEgwbVhhK7Vg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1meOpT671M0YXKVleWbNUe&#39;, &#39;uri&#39;: &#39;spotify:album:1meOpT671M0YXKVleWbNUe&#39;, &#39;name&#39;: &#39;Heartbreaker (Hayasa G X 2 Duds Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-20T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e029eaf6dbef90793fcab8754de&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048519eaf6dbef90793fcab8754de&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2739eaf6dbef90793fcab8754de&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;Yr07izgxTXCk0JRsPuAxSw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1meOpT671M0YXKVleWbNUe?si=Yr07izgxTXCk0JRsPuAxSw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3mYosi8SpolghKstXYUUVL&#39;, &#39;uri&#39;: &#39;spotify:album:3mYosi8SpolghKstXYUUVL&#39;, &#39;name&#39;: &#39;Flashbacks (Ilkan Günüç x Emrah Turken Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-20T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02464f80a3de8081e3ced850e5&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851464f80a3de8081e3ced850e5&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273464f80a3de8081e3ced850e5&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;1IhfCGFjQAKvSLx3Ih8ZYQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3mYosi8SpolghKstXYUUVL?si=1IhfCGFjQAKvSLx3Ih8ZYQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4git7Qdd6SSGo2KTVezvJk&#39;, &#39;uri&#39;: &#39;spotify:album:4git7Qdd6SSGo2KTVezvJk&#39;, &#39;name&#39;: &#39;Flashbacks (Frost &amp; NitugaL Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-11-20T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0248f22660a420a20c5a35578f&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485148f22660a420a20c5a35578f&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27348f22660a420a20c5a35578f&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;OrfP3H_EQdCqAn6fq-lAcg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4git7Qdd6SSGo2KTVezvJk?si=OrfP3H_EQdCqAn6fq-lAcg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;04lKfTNaDbF7wsKFMT6dA4&#39;, &#39;uri&#39;: &#39;spotify:album:04lKfTNaDbF7wsKFMT6dA4&#39;, &#39;name&#39;: &#39;Pretty Thoughts&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-10-30T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02da4232c536aa2089241ae3ee&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851da4232c536aa2089241ae3ee&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273da4232c536aa2089241ae3ee&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;bvtVasd2QzGR1pjvoKbsGA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/04lKfTNaDbF7wsKFMT6dA4?si=bvtVasd2QzGR1pjvoKbsGA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;2DAC8ojG0pgvJUoiwmcS3F&#39;, &#39;uri&#39;: &#39;spotify:album:2DAC8ojG0pgvJUoiwmcS3F&#39;, &#39;name&#39;: &#39;Call Me Now&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-10-09T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02d0357508962439166cb3ffac&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851d0357508962439166cb3ffac&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273d0357508962439166cb3ffac&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;u8O11qu4S3q-SEGBcc48lg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/2DAC8ojG0pgvJUoiwmcS3F?si=u8O11qu4S3q-SEGBcc48lg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;0bXze37SVEWQFhnPV3s9LO&#39;, &#39;uri&#39;: &#39;spotify:album:0bXze37SVEWQFhnPV3s9LO&#39;, &#39;name&#39;: &#39;Read My Lips&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-11T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0240f07e8b812620c56865ada2&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485140f07e8b812620c56865ada2&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27340f07e8b812620c56865ada2&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;FmhJCW0RSMKSGG2bJ226Tg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/0bXze37SVEWQFhnPV3s9LO?si=FmhJCW0RSMKSGG2bJ226Tg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}, {&#39;id&#39;: &#39;5ufENg5IRga0I2fwN3im0z&#39;, &#39;uri&#39;: &#39;spotify:album:5ufENg5IRga0I2fwN3im0z&#39;, &#39;name&#39;: &#39;Read My Lips (feat. Farina)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-11T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e021ea7c1b664a2305303eba411&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048511ea7c1b664a2305303eba411&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2731ea7c1b664a2305303eba411&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;8_VM9eyvSDeTvyagCtMTBg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5ufENg5IRga0I2fwN3im0z?si=8_VM9eyvSDeTvyagCtMTBg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;72htV6DCLQyi9Wy63SOW3L&#39;, &#39;uri&#39;: &#39;spotify:album:72htV6DCLQyi9Wy63SOW3L&#39;, &#39;name&#39;: &#39;Read My Lips (Deejay Killer Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-10T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0292c404bdc6c2a02578e5109e&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485192c404bdc6c2a02578e5109e&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27392c404bdc6c2a02578e5109e&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;-fwYS3GjSYuvvFKwxE5Yvw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/72htV6DCLQyi9Wy63SOW3L?si=-fwYS3GjSYuvvFKwxE5Yvw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5a7LjEwDcxYO7gxzK3JlQl&#39;, &#39;uri&#39;: &#39;spotify:album:5a7LjEwDcxYO7gxzK3JlQl&#39;, &#39;name&#39;: &#39;Read My Lips (Bttn Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-10T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0241821bcdb43cf83d0dcc519c&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485141821bcdb43cf83d0dcc519c&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27341821bcdb43cf83d0dcc519c&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;Cp1z2PJGTniZhK3NVwqvYQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5a7LjEwDcxYO7gxzK3JlQl?si=Cp1z2PJGTniZhK3NVwqvYQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;2UmfNVsAyYfoB0HYsTaRGZ&#39;, &#39;uri&#39;: &#39;spotify:album:2UmfNVsAyYfoB0HYsTaRGZ&#39;, &#39;name&#39;: &#39;Read My Lips (Asher Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-10T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02ceb541de00133d201d09baec&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851ceb541de00133d201d09baec&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273ceb541de00133d201d09baec&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;El0Ghzp8S9i2lJok6sCJyw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/2UmfNVsAyYfoB0HYsTaRGZ?si=El0Ghzp8S9i2lJok6sCJyw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;61nRCQts4FH4MlGgq8pEdO&#39;, &#39;uri&#39;: &#39;spotify:album:61nRCQts4FH4MlGgq8pEdO&#39;, &#39;name&#39;: &#39;Read My Lips (A-Connection Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-10T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02024e2e55cb72c8d30211b55a&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851024e2e55cb72c8d30211b55a&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273024e2e55cb72c8d30211b55a&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;_2t-29-rQNywwzz57gC7Tg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/61nRCQts4FH4MlGgq8pEdO?si=_2t-29-rQNywwzz57gC7Tg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;0YKh5UzzHKZbshkmn6Fq1g&#39;, &#39;uri&#39;: &#39;spotify:album:0YKh5UzzHKZbshkmn6Fq1g&#39;, &#39;name&#39;: &#39;Read My Lips (Suark Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0261b6f0dd418c93f28a42fb8c&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485161b6f0dd418c93f28a42fb8c&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27361b6f0dd418c93f28a42fb8c&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;sjoMiu8PRhuSZr-vETKFLA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/0YKh5UzzHKZbshkmn6Fq1g?si=sjoMiu8PRhuSZr-vETKFLA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4zrPEcKbJPnrYR9gQXef02&#39;, &#39;uri&#39;: &#39;spotify:album:4zrPEcKbJPnrYR9gQXef02&#39;, &#39;name&#39;: &#39;Read My Lips (Nomad Digital Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0207d5a59643d66e6410bb7a01&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485107d5a59643d66e6410bb7a01&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27307d5a59643d66e6410bb7a01&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;62rWx3_ITfqYJQFuz5vdvg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4zrPEcKbJPnrYR9gQXef02?si=62rWx3_ITfqYJQFuz5vdvg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4xusTeCwdS1r5CIi7orUc3&#39;, &#39;uri&#39;: &#39;spotify:album:4xusTeCwdS1r5CIi7orUc3&#39;, &#39;name&#39;: &#39;Read My Lips (Mert Hakan &amp; Soner Karaca Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0212f55859323caff028417234&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485112f55859323caff028417234&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27312f55859323caff028417234&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;O86Vmz8KQaeKMZcfDGb64A&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4xusTeCwdS1r5CIi7orUc3?si=O86Vmz8KQaeKMZcfDGb64A&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1lnzxi9DzkaboUP2d2B0wv&#39;, &#39;uri&#39;: &#39;spotify:album:1lnzxi9DzkaboUP2d2B0wv&#39;, &#39;name&#39;: &#39;Read My Lips (Live Version)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0288c8a54e9fb51b81fabbf419&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485188c8a54e9fb51b81fabbf419&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27388c8a54e9fb51b81fabbf419&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;_ggbzlEiQDyZuqAZSTkDJQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1lnzxi9DzkaboUP2d2B0wv?si=_ggbzlEiQDyZuqAZSTkDJQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;2YChwuBfvhxBBfbAhwES3e&#39;, &#39;uri&#39;: &#39;spotify:album:2YChwuBfvhxBBfbAhwES3e&#39;, &#39;name&#39;: &#39;Read My Lips (Kom Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0287a719081480c4d357d9ec43&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485187a719081480c4d357d9ec43&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27387a719081480c4d357d9ec43&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;QwcAUXvlTmSq05UP4uyviw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/2YChwuBfvhxBBfbAhwES3e?si=QwcAUXvlTmSq05UP4uyviw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6rv03r6Lbvky1sBJsz91gT&#39;, &#39;uri&#39;: &#39;spotify:album:6rv03r6Lbvky1sBJsz91gT&#39;, &#39;name&#39;: &#39;Read My Lips (Enver Yıldırım Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e025b28edc36900e3bbbd62a821&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048515b28edc36900e3bbbd62a821&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2735b28edc36900e3bbbd62a821&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;p6kbLWusRlK46FLlAwZniA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6rv03r6Lbvky1sBJsz91gT?si=p6kbLWusRlK46FLlAwZniA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1B6HKEqwxDK62wfNvTYFd2&#39;, &#39;uri&#39;: &#39;spotify:album:1B6HKEqwxDK62wfNvTYFd2&#39;, &#39;name&#39;: &#39;Read My Lips (Emrah Is &amp; Furkan Syzo Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-09-04T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02e41f6805869b1a300bef15c4&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851e41f6805869b1a300bef15c4&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273e41f6805869b1a300bef15c4&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;3Qi54kv8Qwm-w-erFMdH3Q&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1B6HKEqwxDK62wfNvTYFd2?si=3Qi54kv8Qwm-w-erFMdH3Q&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;0xBL5r92lV5SZDU8FvrZ1u&#39;, &#39;uri&#39;: &#39;spotify:album:0xBL5r92lV5SZDU8FvrZ1u&#39;, &#39;name&#39;: &#39;Discoteka&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-07-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e025e57bd5850c48cba40516dad&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048515e57bd5850c48cba40516dad&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2735e57bd5850c48cba40516dad&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;vZ0QZj0PRzahFTt4AMxfVw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/0xBL5r92lV5SZDU8FvrZ1u?si=vZ0QZj0PRzahFTt4AMxfVw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}, {&#39;id&#39;: &#39;41DxWGed4b9UhhlV1NMTUs&#39;, &#39;uri&#39;: &#39;spotify:album:41DxWGed4b9UhhlV1NMTUs&#39;, &#39;name&#39;: &#39;Discoteka (feat. INNA)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-07-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e028385aa1ee819a15f1061845e&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048518385aa1ee819a15f1061845e&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2738385aa1ee819a15f1061845e&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;s3qte6SbQfuYDLEasitdow&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/41DxWGed4b9UhhlV1NMTUs?si=s3qte6SbQfuYDLEasitdow&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6IW8o4Lz9P9ujfUgOdHWtu&#39;, &#39;uri&#39;: &#39;spotify:album:6IW8o4Lz9P9ujfUgOdHWtu&#39;, &#39;name&#39;: &#39;Discoteka (Remix Bundle)&#39;, &#39;type&#39;: &#39;EP&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-07-22T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0254089c2162abee141be954ba&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485154089c2162abee141be954ba&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27354089c2162abee141be954ba&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;Xn0-p5_RQE2FZFNBgcK3zQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6IW8o4Lz9P9ujfUgOdHWtu?si=Xn0-p5_RQE2FZFNBgcK3zQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 4}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4I6pDC6siENO88V77O3Mpb&#39;, &#39;uri&#39;: &#39;spotify:album:4I6pDC6siENO88V77O3Mpb&#39;, &#39;name&#39;: &#39;Nobody&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-06-26T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02cea251d1d1e4557d87f72fbd&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851cea251d1d1e4557d87f72fbd&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273cea251d1d1e4557d87f72fbd&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;LbFUfUCaRsOibzLjkCUrUA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4I6pDC6siENO88V77O3Mpb?si=LbFUfUCaRsOibzLjkCUrUA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;0Y1Nl1sqnxQApaslRhpwTP&#39;, &#39;uri&#39;: &#39;spotify:album:0Y1Nl1sqnxQApaslRhpwTP&#39;, &#39;name&#39;: &#39;Nobody (Extended Mix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-06-25T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e023cf558c1af6a3871d6e4c995&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048513cf558c1af6a3871d6e4c995&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2733cf558c1af6a3871d6e4c995&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;U1LZtmHcSzuWktFA_C7jFg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/0Y1Nl1sqnxQApaslRhpwTP?si=U1LZtmHcSzuWktFA_C7jFg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;2UicE2GticRO28ik8hMHxL&#39;, &#39;uri&#39;: &#39;spotify:album:2UicE2GticRO28ik8hMHxL&#39;, &#39;name&#39;: &#39;Nobody (Ferki Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-06-24T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e024bb3a004e62ac989ef48003f&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048514bb3a004e62ac989ef48003f&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2734bb3a004e62ac989ef48003f&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;1-Flx0RnSBGmS2i3qj4YkA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/2UicE2GticRO28ik8hMHxL?si=1-Flx0RnSBGmS2i3qj4YkA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6jQ3Z07rURE442fNYM84Hs&#39;, &#39;uri&#39;: &#39;spotify:album:6jQ3Z07rURE442fNYM84Hs&#39;, &#39;name&#39;: &#39;VKTM&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-05-29T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e024a4d2792326df89edcccd7a1&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048514a4d2792326df89edcccd7a1&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2734a4d2792326df89edcccd7a1&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;B6xNTyrJQFS23SzsC8bEzg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6jQ3Z07rURE442fNYM84Hs?si=B6xNTyrJQFS23SzsC8bEzg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7ol5R0cGYVflCySSwIsCAl&#39;, &#39;uri&#39;: &#39;spotify:album:7ol5R0cGYVflCySSwIsCAl&#39;, &#39;name&#39;: &#39;Sober&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-05-06T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02f56f13d5d7f5d62d3ec4f1f6&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851f56f13d5d7f5d62d3ec4f1f6&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273f56f13d5d7f5d62d3ec4f1f6&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;kVefmDMoRcCp4C8P8NY6jg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7ol5R0cGYVflCySSwIsCAl?si=kVefmDMoRcCp4C8P8NY6jg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5sHU0XJ897eLbktQSsw0ru&#39;, &#39;uri&#39;: &#39;spotify:album:5sHU0XJ897eLbktQSsw0ru&#39;, &#39;name&#39;: &#39;Sober (Extended Mix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-05-05T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e020a8c7e22cd6a26d4c5110329&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048510a8c7e22cd6a26d4c5110329&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2730a8c7e22cd6a26d4c5110329&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;74TVPiDQRdmE4bdCmm-XAw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5sHU0XJ897eLbktQSsw0ru?si=74TVPiDQRdmE4bdCmm-XAw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1wRWRl2JmQ7qcY0w0Olnzi&#39;, &#39;uri&#39;: &#39;spotify:album:1wRWRl2JmQ7qcY0w0Olnzi&#39;, &#39;name&#39;: &#39;Not My Baby&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-04-03T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0233a5e449d40db01a4006cd1e&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485133a5e449d40db01a4006cd1e&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27333a5e449d40db01a4006cd1e&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;GEHHBMADSCyJM4SSyghR-w&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1wRWRl2JmQ7qcY0w0Olnzi?si=GEHHBMADSCyJM4SSyghR-w&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3HhiJjraZFnQmMZcbui1Dv&#39;, &#39;uri&#39;: &#39;spotify:album:3HhiJjraZFnQmMZcbui1Dv&#39;, &#39;name&#39;: &#39;Sober (Nomad Digital Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-04-02T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e024d5d0bb1d0d38e9bad819e02&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048514d5d0bb1d0d38e9bad819e02&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2734d5d0bb1d0d38e9bad819e02&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;h-IMjAnORluOkNKpDm7-tw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3HhiJjraZFnQmMZcbui1Dv?si=h-IMjAnORluOkNKpDm7-tw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6qx7tgsJj2mH0YLZ7Ruicx&#39;, &#39;uri&#39;: &#39;spotify:album:6qx7tgsJj2mH0YLZ7Ruicx&#39;, &#39;name&#39;: &#39;Sober (Mally Gulbetekin Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2020, &#39;isoString&#39;: &#39;2020-04-02T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02ee722c8919af60622c90ca31&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851ee722c8919af60622c90ca31&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273ee722c8919af60622c90ca31&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;Si-x2Mn9TyWtkF733Gm-AQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6qx7tgsJj2mH0YLZ7Ruicx?si=Si-x2Mn9TyWtkF733Gm-AQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}]}}}}, &#39;extensions&#39;: {&#39;cacheControl&#39;: {&#39;version&#39;: 1, &#39;hints&#39;: []}}} .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Title",
            "content": "",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/10/03/PBL-python_rapidapi-jvsc-5cb71e3e-6670-4921-bf8f-b80ab6c3b4dd2bd47a42-5aae-4c20-8bea-605fa036b334.html",
            "relUrl": "/2022/10/03/PBL-python_rapidapi-jvsc-5cb71e3e-6670-4921-bf8f-b80ab6c3b4dd2bd47a42-5aae-4c20-8bea-605fa036b334.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] i = 1 for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 1 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The letter c is the 2 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) count = 1 for i in alphabetList: if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter d is the 4 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt;= 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98, 100] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99 } total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) total= menu[item] #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 3.99 . Errors . Trying to work by ourselves | Not understanding instructions | Accidently adding or deleting code | Typing in code wrong | Our computer having difficulties running | . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Projectidea",
            "content": "Project Plan . Main Function . Our final project will be a website that will be a webstie that will be a website that will help people create music playlists. We will have different genres represented by diferent html tabs at the top of our blog. When these are clicked there will be links to the different posts. These posts will be different artists and there will be a paragraph to describe them. Then we will put some of the most popular songs by these artist. We wil also add who these artists are similar to and what songs are similar to each other. | . Outline . We will begin with creating the html tabs of the different genres. We will be doing, rap, rock, country, and pop. We will add the history of this genre and what it sounds like. There will be a summery of why someone might like it. | We will then create the posts of the artists. We will make sure to add at least 5 artists to each genre. We wil add their backstory and what their music sounds like. we will also add what other artists they sound like. | Then we will ads the songs of each of these artists. 5 songs per artist. A total of 100 songs will be added. We will also right similar songs t these. | . College Board Criteria . Row 1: Program Purpose and Function. The purpose of the website will be to create a playlist. The functin will be different posts create and html tabs that are linked to these. | Row 2: Data Abstraction. We will be able to explain the variables of artists, songs, and genres. | Row 3: Managing Complexity. If we run into problems we will ask each other questions. | Row 4: Procedural Abstraction. We will understand our process nd manage our time well. | Row 5: Algorithm Implementation. Organizign by genre, artist, and songs will show this. | Row 6: Testing. Testing will occur after we create the webstie. We will make sure every page is running well. | . Hacks . Some similarities I see are that the tables are created in the same way between both verions of code. Both check for errors in the similar ways. “If (response.status !==200)” is used for both. They also both use the “Get, Post, Put, Delete” method for preparing fetch options. Both use console.log(data). | In the first block the code is making a table of covid cases. It shows a time, All-time cases, recorded Deaths, and active cases column. There is also a table that seperates into a Joke, Haha and BooBoo. There is a joke and a number of Boohoos or Hahas. The next block of code is making a variables for this Boohoo or Haha and allowing the user to input if the like the joke or not. Then the next block of code is making that into a API so the data is shared between all users. | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/10/02/ProjectIdea.html",
            "relUrl": "/2022/10/02/ProjectIdea.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Scrumprocess",
            "content": ".",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/09/25/ScrumProcess.html",
            "relUrl": "/2022/09/25/ScrumProcess.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Week4video",
            "content": "Week 4 Video . . Title: Week 4 Video | toc: true | layout: post | Badges: true | comments: True | author: Jake Warren | Categories: [Coding] . | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/09/19/Week4Video.html",
            "relUrl": "/2022/09/19/Week4Video.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Lauriesantos",
            "content": "Laurie Santos Notes . . Title: Laurie Santos | toc: true | layout: post | Badges: true | comments: True | author: Jake Warren | Categories: [Coding] . | . “Psychology and the Good Life” Analysis . Main Idea . Laurie Santos was giving a TedTalk about how to teachers can make srudents happier. She talked about how our brains work and how students can be the most efficiant. She also teaches students how they should use this information to etter their lives. | . Main Points . Materialistic items and short term events are only a small stimulate of happiness. Real happiness comes from success. When people do things that will benefit their worth and value that is when they are happiest. | Being social is important for happiness. As humans we are social creatures so we must communicste with others all the time to stay happy. | You have to practice the knowlege she is giiving you. Knowing how to better your life is one thing but you have to actually act to make change. | Be grateful for everythign you have. If you appreciate what you have and don’t only think about what you can have you will be happier. This is because you will be happy with your life. You won’t want more and if you are completley happy with your life there is no reason to be depressed. | You are not stuck at one state of wellness. You are able to change your state of mind. Pur own doing and improving our lives is half of our well-being while the other half we are born with | Your brain lies to you o what you want. It may tell you you want to have a materialistic item but really you want to better your life. Drugs a short term stimulate that make your life worse in the long run. | Gratitude note . My Friend . I am grateful for you Ethan. You are always by my side and ever since I figured out we were neighbors I have had a great time. We have been best friends for a while now. | I am grateful for my ability to avance my life into the next step. For the ability to be the best possible version of my self | I am grateful for easy access to a gym whether it be my friends gym or LA Fitness. | I am grateful for my teammates and our chance at a championhsip | I am grateful for the wealth I have been given | I am grateful for the mistakes I have made along the way on my journey. I have learned greatly from all of these mistakes and I am a beter man for it. | I am grateful for my parents and their ability to provide me with all I need | . Response . Thank you Jake. I appreciate you too. You have always been there for me too. i am very happy we have had this friendship. | . Gratitude list . Food | Family | Friends | Education | Football | . Goals . Improve myself mentally and physically | Go to college | Eat healthy | Drink lots of water | Socialize as much as I can | Remain calm | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/09/19/LaurieSantos.html",
            "relUrl": "/2022/09/19/LaurieSantos.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Collegeboardnotes",
            "content": "College Board Notes . . Title: College Board Notes | toc: true | layout: post | Badges: true | comments: True | author: Jake Warren | Categories: [Coding] . | . 1.1 Videos . Video 1 . Computing innovations are improved through collaberation | Computing innovtion includes a program as an integral part of its function | Computing innovation can be physical or nonphysical | Diverse perspectives eliminates bias in development | . Video 2 . Pair programming is when two programmers work together. The diver writes the code and the pointers makes sure every line of code is correct. | Think-pair-share is a process where a student thinks through a process alone. Then they find a parter and share their ideas with them then the class. | Comments in code help partners | Github is a great way to work together | . ### Video 3 . Quiz Results . . Practice Questions . What is a For Loop? | What is the first step in the Scrum Process? | What is an API? | Why is it important to have a group whilst developing a website? | What are the 6 college board critera? | Answers. . A For Loop is a repeat of a block of code when the values are already known. A while loop does not already have values. | Developing instructions and a plan | An API is an Application programming interface. It transfers one softwares information to another so both can use the data. | It is important to have a group while coding because they can check your software. | The 6 college board criterea are Program purpose and function, data abstraction, manageing complexity, procedural abstraction, algoritm implementation, and testing. | Hacks . Me and my partner did not know each other before oming to this class | Both of us are white | He likes skateboarding and I like football as our main hobbies | We do have a lot of similariities though | We are both new to coding but have differnt skills. He understandssome code better and I understand other code better. | . 4.1 . I was able to learn the relationship between the internet and the World Wide Web. WWW is a system of linked pages that is accessed through the internet which is a network. | I also learned how messages work. They are broken into packets. These packets are then transfered and no matter what order they were scrambled in they are put back together in the correct order. | Protocalls provide a way to standardize data transmission between different devices | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/09/19/CollegeBoardNotes.html",
            "relUrl": "/2022/09/19/CollegeBoardNotes.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "App Lab Idea",
            "content": "App Lab Idea . My idea for a new app would be a game. In this game the player would customize a car. It would ask a series of questions. First it would ask; What type of car do you want? It would give an option of a truck, SUV, small car, and and convertable. Next it would ask what color do you want it. Eventually when all of the question are done being asked, based on what the player input, a picture of a car would be shown. It would have all of the customizations the player input. | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/09/09/AppIdea.html",
            "relUrl": "/2022/09/09/AppIdea.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "App Lab Notes",
            "content": "Notes . Out test is on Clash Royale | We used on event for most codes | Score is rewarded for getting a question right and taken away for getting it wrong | . Link . https://studio.code.org/projects/applab/XrKdcpPzPk4O3m7JoM-nBXh3WYKJlcGoCP75AYGR_Qg .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/coding/2022/09/08/AppLab.html",
            "relUrl": "/coding/2022/09/08/AppLab.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Vocab Notebook",
            "content": "Lists: | Dictionaries: | Iteration: | String: | Print: | Index: | Intefwevwfvger | Float | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/08/30/vocab.html",
            "relUrl": "/2022/08/30/vocab.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "For Loop",
            "content": "InfoDb = [] InfoDb.append({ &quot;FirstName&quot;: &quot;Jake&quot;, &quot;LastName&quot;: &quot;Warren&quot;, &quot;DOB&quot;: &quot;September 8&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;FavoriteFood&quot;: &quot;Burger&quot;, &quot;Email&quot;: &quot;jacobw22751@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2016-Toyota Tacoma&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Finn&quot;, &quot;LastName&quot;: &quot;Carpenter&quot;, &quot;DOB&quot;: &quot;December 12&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;FavoriteFood&quot;: &quot;Pizza&quot;, &quot;Email&quot;: &quot;finnc51448@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2012 Nissan Xterra&quot;] }) InfoDb.append({ &quot;FirstName&quot;: input(&quot;Name:&quot;), &quot;LastName&quot;: input(&quot;LastName:&quot;), &quot;DOB&quot;: input(&quot;Birthday:&quot;), &quot;Residence&quot;: input(&quot;Residence:&quot;), &quot;FavoriteFood&quot;: input(&quot;FavoriteFood:&quot;), &quot;Email&quot;: input(&quot;Email:&quot;), &quot;Owns_Cars&quot;: input(&quot;Owns_Cars:&quot;) }) . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) print(&quot; t&quot;, &quot;FavoriteFood:&quot;, d_rec[&quot;FavoriteFood&quot;]) print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars:&quot;, d_rec[&quot;Owns_Cars&quot;]) print() def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Jake Warren Residence: San Diego FavoriteFood: Burger Birth Day: September 8 Cars: [&#39;2016-Toyota Tacoma&#39;] Finn Carpenter Residence: San Diego FavoriteFood: Pizza Birth Day: December 12 Cars: [&#39;2012 Nissan Xterra&#39;] Jake Warren Residence: San Diego FavoriteFood: Burger Birth Day: September 8 Cars: kv . q1 = &quot;&quot;&quot;Is the sky blue a. Yes b. No&quot;&quot;&quot; q2 = &quot;&quot;&quot;How many states are there in the US? a. 45 b. 50 c. 100&quot;&quot;&quot; questions = {q1:&quot;a&quot;,q2:&quot;b&quot;} name = input(&quot;enter your name:&quot;) print(&quot;Hello&quot;, name) score = 0 for i in questions: print(i) ans = input(&quot;enter the answer: (a/b):&quot;) if ans==questions[i]: print(&quot;correct&quot;) score=score+1 print(score, &quot;point&quot;) else: print(&quot;wrong&quot;) . Hello Jake Is the sky blue a. Yes b. No correct 1 point How many states are there in the US? a. 45 b. 50 c. 100 correct 2 point .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/08/30/ForLoop.html",
            "relUrl": "/2022/08/30/ForLoop.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Football Quiz",
            "content": "def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;Quaterback&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;What position throws the ball?&quot;) . Question: What position throws the ball? Answer: Quaterback . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;Tom Brady&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;What NFL player has the most Superbowl rings?&quot;) . Question: What NFL player has the most Superbowl rings? Answer: Tom Brady . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;11&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;How many players are on a football field at once?&quot;) . Question: How many players are on a football field at once? Answer: 11 . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;17&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;How many games are in the NFL regular season?&quot;) . Question: How many games are in the NFL regular season? Answer: 17 . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;Bengals&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;What team does Joe Burrow play for?&quot;) . Question: What team does Joe Burrow play for? Answer: Bengals .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/08/28/notebookquiz.html",
            "relUrl": "/2022/08/28/notebookquiz.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Title",
            "content": "",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/08/28/notebookquiz-jvsc-6de98708-b9e9-4d75-970a-64e4966923a26a9c0e4a-13dc-442d-a79d-091cdfb41ea7.html",
            "relUrl": "/2022/08/28/notebookquiz-jvsc-6de98708-b9e9-4d75-970a-64e4966923a26a9c0e4a-13dc-442d-a79d-091cdfb41ea7.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "First Bash Post",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /Users/jakewarren/vscode exists. Directory /Users/jakewarren/vscode/APCSP exists. .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/coding/2022/08/26/bash.html",
            "relUrl": "/coding/2022/08/26/bash.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Football",
            "content": "Jakes Blog . All about football . My experience with football. I am a football player and I play cornerback for the Del Norte Nighthawks. . Football Picture . . I am hoping we have a great season. Our team has put in a lot of work this season. We are hoping to win a championship. . Record: 2-0 . EHS: 42-0 Win | UCHS: 47-41 Win | . Chris Stapleton Parker McCollum Morgan Wallen Zach Bryan Luke Combs . 1. | A Simple Song | Pretty Heart | Chasin&#39; You | Something in the Orange | When It Rains It Pours | . 2. | Tennessee Whisky | Young Man&#39;s Blues | You Proof | Heading South | Beautiful Crazy | . 3. | Starting Over | To Be Loved By You | Whiskey Glasses | Revival | Beer Never Broke My Heart | . 4. | Broken Halos | Hell of a Year | Wasted on You | Condemned | Lovin&#39; On You | . 5. | Nashville, TN | Handle On You | More Than My Hometown | Late July | Even Though I&#39;m Leaving | . &lt;div class=&quot;px-5 py-5 mx-auto&quot;&gt; &lt;h1 class=&quot;text-primary&quot;&gt;&lt;strong&gt;Top Five Country Artists&lt;/strong&gt;&lt;/h1&gt; &lt;h2 class=&quot;text-primary&quot;&gt;&lt;strong&gt;Chris Stapleton &lt;/strong&gt;&lt;/h2&gt; &lt;p class=&quot;text-secondary&quot;&gt;Chris is a very lyrical country artist and mellow. He ususally plays the guitar. His music follows the path of a story.&lt;/p&gt; &lt;h2 class=&quot;text-primary&quot;&gt;&lt;strong&gt;Parker McCollum&lt;/strong&gt;&lt;/h2&gt; &lt;p class=&quot;text-secondary&quot;&gt; &lt;/p&gt; &lt;h2 class=&quot;text-primary&quot;&gt;&lt;strong&gt;Morgan Wallen&lt;/strong&gt;&lt;/h2&gt; &lt;p class=&quot;text-secondary&quot;&gt; &lt;/p&gt; &lt;h2 class=&quot;text-primary&quot;&gt;&lt;strong&gt;Zach Bryan&lt;/strong&gt;&lt;/h2&gt; &lt;p class=&quot;text-secondary&quot;&gt; &lt;/p&gt; &lt;h2 class=&quot;text-primary&quot;&gt;&lt;strong&gt;Luke Combs&lt;/strong&gt;&lt;/h2&gt; &lt;p class=&quot;text-secondary&quot;&gt; &lt;/p&gt; &lt;/div&gt; .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/football/2022/08/24/football-markdown-post.html",
            "relUrl": "/football/2022/08/24/football-markdown-post.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "School Page",
            "content": "School Page . Trimester 1 . Period 1: APES . Monday, Tuesday, Thurday: 8:35 AM- 9:44 AM | Wednesday: 9:55 AM- 10:53 AM | Friday: 8:35 AM- 9:49 AM Period 2: English . | Monday, Tuesday, Thurday: 9:49 AM- 10:58 AM | Wednesday: 10:58 AM- 11:56 AM | Friday: 9:54 AM- 11:08 AM Period 3: AFA . | Monday, Tuesday, Thurday: 11:13 AM- 12:22 PM | Wednesday: 12:11 PM- 1:09 PM | Friday: 11:23 AM- 12:37 PM Period 4: Computer Science . | Monday, Tuesday, Thurday: 12:57 PM- 2:06 PM | Wednesday: 1:44 PM- 2:42 PM | Friday: 1:12 PM- 2:26 PM Period 5: Football . | Monday, Tuesday, Thurday: 2:36 PM- 3:45 PM | Wednesday: 2:47 PM- 3:45 PM | Friday: 2:31 PM- 3:45 PM | . .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/school/2022/08/22/scheduale-markdown-post.html",
            "relUrl": "/school/2022/08/22/scheduale-markdown-post.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "First Notebook",
            "content": "",
            "url": "https://jakewarren2414.github.io/FirstFastpages/2022/08/22/notebook.html",
            "relUrl": "/2022/08/22/notebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Binary Math",
            "content": "no . Binary Math with Conversions . Plus Binary Octal Hexadecimal Color Code Color Decimal Minus . +1 | 00000000 | 0 | 0 | 00 | | 0 | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | | | | | | | | | | | | | | | | | .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://jakewarren2414.github.io/FirstFastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post35": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://jakewarren2414.github.io/FirstFastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I am a football player and I own the Jake Warren 1 Github page. . This is a personal portfolio of me. &#8617; . |",
          "url": "https://jakewarren2414.github.io/FirstFastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jakewarren2414.github.io/FirstFastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}